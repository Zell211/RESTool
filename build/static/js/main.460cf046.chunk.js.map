{"version":3,"sources":["helpers/data.helpers.ts","services/http.service.ts","services/config.service.ts","components/app.context.ts","components/withContext/withContext.comp.tsx","components/loader/loader.comp.tsx","helpers/pagination.helpers.ts","components/button/button.comp.tsx","components/infiniteLoader/infiniteLoader.comp.tsx","components/pagination/pagination.comp.tsx","components/table/table.comp.tsx","components/cards/cards.comp.tsx","components/formRow/formRow.comp.tsx","components/queryParams/queryParams.comp.tsx","components/popup/popup.comp.tsx","helpers/file.helpers.ts","components/formPopup/formPopup.comp.tsx","components/filterField/filterField.comp.tsx","components/resourceItems/resourceItems.comp.tsx","components/page/page.comp.tsx","helpers/routes.helpers.ts","components/details/details.comp.tsx","components/detailPage/detailPage.comp.tsx","components/navigation/navigation.comp.tsx","components/customStyles/customStyles.comp.tsx","components/app.tsx","serviceWorker.ts","index.tsx"],"names":["dataHelpers","data","dataPath","attr","get","extractedData","field","type","arrayType","HttpService","baseUrl","unauthorizedRedirectUrl","errorMessageDataPath","requestHeaders","this","url","indexOf","rawData","outputUrl","Object","keys","forEach","key","urlParamName","replace","queryParams","length","replaceParamsInUrl","params","param","name","value","urlReplaceOnly","paramValue","undefined","push","firstSeparator","join","reqUrl","urlIsAbsolute","origUrl","buildUrl","method","toUpperCase","headers","assign","body","res","errorMessage","json","path","dataAtPath","extractDataByDataPath","status","statusText","redirectUrl","encodeURIComponent","document","location","href","Error","getErrorMessage","responseType","fetch","ok","text","handleError","buildRequest","makeRequest","httpService","HTTPService","endsWith","import","default","getRemoteConfig","config","isValid","configSchema","require","validate","Ajv","allErrors","verbose","compile","firstError","errors","message","console","error","AppContext","React","createContext","detailPagesConfig","activeResource","activeItem","activePathVars","setError","setActiveResource","setActiveItem","setActivePathVars","withAppContext","Component","props","Consumer","context","Loader","className","paginationHelpers","page","parseInt","_page","_itemsPerPage","_total","Button","color","children","InfiniteLoader","Pagination","callbacks","pagination","customLabels","previousTitle","previousPageTitle","nextTitle","nextPageTitle","disabled","hasPreviousPage","onClick","previousPage","title","aria-hidden","hasNextPage","nextPage","Table","items","fields","customActions","editLabel","buttons","editItem","deleteLabel","deleteItem","actionColumnHeader","tableColumnHeaders","actions","paginationCallbacks","getNextPage","getPreviousPage","renderTableRow","item","rowIdx","map","fieldIdx","truncate","origField","origItem","src","alt","label","fieldValue","target","rel","urlLabel","style","backgroundColor","renderTableCell","details","call","put","action","idx","icon","delete","renderTableContent","useEffect","clientHeight","window","innerHeight","dataLength","next","hasMore","loader","Cards","renderActions","cardIdx","renderCard","Fragment","renderRow","renderCardSkeleton","duration","startingIndex","Array","from","limit","renderSkeletons","FormRow","direction","showReset","onChange","useState","optionSources","setOptionSources","pageHeaders","addArrayItemLabel","addArrayItem","clearLabel","clearInput","fieldName","optionSource","a","actualMethod","result","optionSourceData","option","valuePath","displayPath","display","toast","renderArrayItems","originalField","array","itemIdx","inputField","renderFieldInput","updatedArray","localValue","splice","removeItemToFieldArray","aria-label","e","preventDefault","addItemToFieldArray","changeCallback","inputProps","defaultPlaceholder","placeholder","readonly","required","checked","loadOptionSourceFromRemote","sortBy","finalOptions","options","sortedOptions","orderBy","placeholders","object","number","valueAsNumber","email","password","accept","file","date","originalName","QueryParams","initialParams","paginationConfig","submitCallback","setQueryParams","submit","formChanged","submitAfterChange","updatedQueryParams","filteredParams","filter","includes","onSubmit","queryParam","portalRoot","getElementById","createElement","setAttribute","append","PortalPopup","el","componentDidMount","appendChild","componentWillUnmount","removeChild","ReactDOM","createPortal","Popup","_handleKeyDown","show","closeCallback","keyCode","closeLabel","closeForm","ref","refCallback","addEventListener","bind","removeEventListener","fileHelpers","fieldIndex","flatten","unflatten","FormPopup","getSingleConfig","methodConfig","fieldsCopy","JSON","parse","stringify","loading","setLoading","formFields","setFormFields","finalRawData","setFinalRawData","flattenData","checkIfFieldIsObject","submitForm","finalObject","includeOriginalFields","formData","FormData","containFiles","isMultipartForm","validationError","fileInput","querySelector","files","firstFile","success","updatedFormFields","initFormFields","FilterField","toLowerCase","buildInitQueryParamsAndPaginationState","initQueryParams","initialPagination","descending","find","ResourceItems","openedPopupState","isSubResource","useParams","pathname","useLocation","slice","useHistory","pageMethods","methods","getAllConfig","getAll","infiniteScroll","getSingle","putConfig","deleteConfig","editItemFormTitle","formTitles","openedPopup","setOpenedPopup","setPagination","setItems","setFilter","refreshItems","updatedParams","remove","getAllRequest","openEditPopup","updateItem","openCustomActionPopup","performAction","toItemDetails","id","detailPath","urlParamNames","split","p","parentUrlParamName","RegExp","confirm","dataTransform","isArray","orderedItems","total","newPaginationState","getUpdatedPaginationState","submitQueryParams","reset","paramsToUrl","queryState","newState","newParams","parsedParams","QueryString","search","finalQueryParams","decodeURIComponent","extractQueryParams","isEqual","fieldsToFilter","filterable","currentCountFrom","currentCountTo","itemsCount","renderPaginationStateLabel","filteredItems","passFilter","newPage","itemsCallbacks","renderItemsUI","refreshData","Page","resources","postConfig","post","addItemLabel","addItem","addItemFormTitle","getPageMatch","_resources","pathVars","nextactiveResource","pIdx","match","matchPath","isExact","matchingResource","reduce","allSubR","r","subResources","description","routesHelpers","detailRoutesConfig","acc","resource","detailPageId","route","subResourcesDef","sub","parentId","subRoutes","subDef","flat","deeperRoutes","subResourceRoutes","Details","DetailPage","goBack","detailRouteConfigs","activeTabIndex","setActiveTabIndex","pageName","setPageName","ControlledTabs","selectedIndex","onSelect","tabIndex","index","renderTabContent","getSingleMethods","detailRoute","resourceConfig","conf","log","getOneRequest","parsedPageName","dynamicMatches","dynamicVars","m","replacements","Navigation","isOpened","setIsOpened","to","activeClassName","CustomStyles","cssVars","styles","vars","arr","dangerouslySetInnerHTML","__html","changeFavicon","link","oldLink","head","App","firstLoad","setFirstLoad","setConfig","pages","appName","loadConfig","windowConfig","RESTool","remoteConfig","ConfigService","loadDefaultConfig","favicon","remoteUrl","validateConfig","resourceRoutes","detailRoutes","Provider","customStyles","scrollDuration","cosParameter","scrollY","scrollCount","oldTimestamp","performance","now","step","newTimestamp","Math","PI","scrollTo","round","cos","requestAnimationFrame","scrollToTop","exact","component","position","POSITION","TOP_CENTER","autoClose","draggable","Boolean","hostname","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.460cf046.chunk.js","sourcesContent":["import { get } from 'lodash';\n\nimport { IConfigInputField } from \"../common/models/config.model\";\n\nclass DataHelpers {\n\n  public extractDataByDataPath(data: unknown, dataPath: string, attr: string | null = null) {\n    if (typeof data !== 'object') {\n      return data;\n    }\n\n    if (data === null) {\n      return data;\n    }\n\n    if (!dataPath) {\n      if (attr) {\n        return get(data, attr);\n      }\n      return data;\n    }\n\n    const extractedData = get(data, dataPath);\n\n    if (typeof extractedData === 'undefined') {\n      return null;\n    }\n\n    if (attr) {\n      return get(extractedData, attr);\n    }\n\n    return extractedData;\n  }\n\n  public checkIfFieldIsObject(field: IConfigInputField): boolean {\n    if (field.type === 'object') {\n      return true;\n    }\n\n    if (field.type === 'array') {\n      if (!field.arrayType || field.arrayType === 'object') {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n}\n\nexport const dataHelpers = new DataHelpers();","import { TConfigMethod, IQueryParam } from '../common/models/config.model';\nimport { dataHelpers } from '../helpers/data.helpers';\n\nexport type ResponseType = 'json' | 'text' | 'boolean' | 'status';\n\nexport interface IFetchParams {\n  origUrl: string\n  method?: TConfigMethod\n  headers?: any\n  queryParams?: IQueryParam[]\n  rawData?: any\n  body?: any\n  responseType?: ResponseType\n}\n\nclass HttpService {\n  public baseUrl: string;\n  public unauthorizedRedirectUrl: string;\n  public errorMessageDataPath: string | string[];\n  public requestHeaders: any;\n\n  constructor(baseUrl: string = '', unauthorizedRedirectUrl: string = '', errorMessageDataPath: string = '') {\n    this.baseUrl = baseUrl || '';\n    this.unauthorizedRedirectUrl = unauthorizedRedirectUrl || '';\n    this.errorMessageDataPath = errorMessageDataPath || '';\n    this.requestHeaders = {};\n  }\n\n  private urlIsAbsolute(url: string) {\n    if (url.indexOf('http') === 0 || url.indexOf('https') === 0) {\n      return true;\n    }\n    return false;\n  }\n\n  private replaceParamsInUrl(url: string, rawData?: any): string {\n    if (!rawData || typeof rawData !== 'object') {\n      return url;\n    }\n\n    let outputUrl = url;\n\n    Object.keys(rawData).forEach((key) => {\n      const urlParamName = `:${key}`;\n      outputUrl = outputUrl.replace(urlParamName, rawData[key] as string);\n    });\n\n    return outputUrl;\n  }\n\n  private buildUrl(url: string, queryParams: IQueryParam[] = [], rawData?: any): string {\n    if (!queryParams || !queryParams.length) {\n      return this.replaceParamsInUrl(url, rawData);\n    }\n\n    let outputUrl = this.replaceParamsInUrl(url, rawData);\n    const params = [];\n\n    for (let param of queryParams) {\n      if (!param.name || typeof param.value === 'undefined') {\n        continue;\n      }\n\n      // TODO: Add docs to \"urlReplaceOnly\"\n      if (param.urlReplaceOnly) {\n        const urlParamName = `:${param.name}`;\n        outputUrl = outputUrl.replace(urlParamName, param.value as string);\n      } else {\n        const paramValue = param.value !== undefined ? param.value : '';\n        params.push(`${param.name}=${paramValue}`);\n      }\n    }\n\n    if (params.length) {\n      const firstSeparator = url.indexOf('?') >= 0 ? '&' : '?';\n      return outputUrl + firstSeparator + params.join('&');\n    }\n\n    return outputUrl;\n  }\n\n  private buildRequest(params: IFetchParams): { url: string, params: any } {\n    const reqUrl: string = this.urlIsAbsolute(params.origUrl) ? params.origUrl : this.baseUrl + params.origUrl;\n    const finalUrl: string = this.buildUrl(reqUrl, params.queryParams, params.rawData);\n    const requestParams = {\n      method: params.method ? params.method.toUpperCase() : 'GET',\n      headers: Object.assign({}, this.requestHeaders, params.headers || {}),\n      body: params.method === 'post' || params.method === 'put' || params.method === 'patch' ? params.body : undefined\n    };\n\n    return {\n      url: finalUrl,\n      params: requestParams\n    };\n  }\n\n  private async getErrorMessage(res: Response | any): Promise<string> {\n    let errorMessage: string = '';\n\n    try {\n      const body = await res.json();\n\n      for (const path of this.errorMessageDataPath) {\n        const dataAtPath = dataHelpers.extractDataByDataPath(body, path);\n\n        if (dataAtPath) {\n          errorMessage = dataAtPath;\n        }\n      }\n    } catch { } // TODO: proper handling of errors (^.^)\n\n    return errorMessage && errorMessage.length ?\n      errorMessage :\n      `${res.status} - ${res.statusText || ''}`;\n  }\n\n  private async handleError(res: Response) {\n    // In case response status is \"Unauthorized\", redirect to relevant url\n    if (res.status === 401 && this.unauthorizedRedirectUrl) {\n      const redirectUrl: string = this.unauthorizedRedirectUrl.replace(':returnUrl', encodeURIComponent(document.location.href));\n      document.location.href = redirectUrl;\n      return;\n    }\n\n    throw new Error(await this.getErrorMessage(res));\n  }\n\n  private async makeRequest(url: string, params: any = {}, responseType: ResponseType = 'json') {\n    const res: Response = await fetch(url, Object.assign({}, params, {}));\n\n    if (res.ok) {\n      switch (responseType) {\n        case 'json':\n          return await res.json();\n        case 'text':\n          return await res.text();\n        case 'boolean':\n          return true;\n        default:\n          return true;\n      }\n    }\n\n    await this.handleError(res);\n  }\n\n  public async fetch({ method, origUrl, queryParams, rawData, body, headers, responseType }: IFetchParams) {\n    const { url, params } = this.buildRequest({ method, origUrl, queryParams, rawData, body, headers });\n    return await this.makeRequest(url, params, responseType);\n  }\n}\n\nexport default HttpService;\n","import HTTPService from './http.service';\nimport { IConfig } from '../common/models/config.model';\nimport Ajv from 'ajv';\n\nconst httpService: HTTPService = new HTTPService();\n\nclass ConfigService extends HTTPService {\n\n  public async getRemoteConfig(url: string) {\n    if (url.endsWith('.js')) {\n      return (await import(/* webpackIgnore: true */url)).default;\n    }\n    return await httpService.fetch({\n      origUrl: url,\n    });\n  }\n\n  public async loadDefaultConfig() {\n    try {\n      return await this.getRemoteConfig('/config.json');\n    } catch (e) {\n      return (await this.getRemoteConfig('/config.js'));\n    }\n  }\n\n  public validateConfig(config: IConfig | null): { isValid: boolean, errorMessage: string | null } {\n    if (config === null) {\n      return {\n        isValid: true,\n        errorMessage: null,\n      }\n    }\n    const configSchema = require('../assets/schemas/config.schema.json');\n    const ajv = new Ajv({\n      allErrors: true,\n      verbose: true,\n    });\n    const validate = ajv.compile(configSchema);\n    const isValid = validate(config);\n    if (typeof isValid !== 'boolean') {\n      throw new Error('Unexpected asynchronous JSON validation');\n    }\n    if (isValid) {\n      return {\n        isValid,\n        errorMessage: null,\n      }\n    }\n    const firstError = validate.errors ? validate.errors[0] : undefined;\n    let errorMessage: string | null = null;\n    if (firstError?.message && firstError?.dataPath) {\n      errorMessage = `Error parsing configuration at \"${firstError.dataPath}\": ${firstError.message}`\n    } else if (firstError?.message) {\n      errorMessage = `Error parsing configuration: ${firstError.message}`\n    } else if (firstError?.dataPath) {\n      errorMessage = `Error parsing configuration at \"${firstError.dataPath}\"`\n    } else {\n      errorMessage = `Error parsing configuration`;\n    }\n    console.error(errorMessage);\n    console.error('All configuration errors: ', validate.errors);\n    return {\n      isValid,\n      errorMessage,\n    };\n  }\n\n}\n\nexport default new ConfigService();\n","import React from 'react';\nimport { IConfig, IConfigResource } from '../common/models/config.model';\nimport HttpService from '../services/http.service';\n\nexport interface IAppContext {\n  config: IConfig | null\n  detailPagesConfig: { resource: IConfigResource, route: string }[] | null\n  activeResource: IConfigResource | null\n  activeItem: any | null\n  activePathVars: { [key: string]: string }\n  error: string | null\n  setError: (error: string | null) => void\n  setActiveResource: (activeResource: IConfigResource | null) => void\n  setActiveItem: (activeItem: any | null) => void\n  setActivePathVars: (activePathVars: { [key: string]: string }) => void\n  httpService: HttpService\n}\n\nexport const AppContext = React.createContext<IAppContext>({\n  config: null,\n  detailPagesConfig: null,\n  activeResource: null,\n  activeItem: null,\n  activePathVars: {},\n  error: null,\n  setError: () => { },\n  setActiveResource: () => { },\n  setActiveItem: () => { },\n  setActivePathVars: () => { },\n  httpService: new HttpService()\n});","import React from 'react';\nimport { AppContext } from '../app.context';\n\nexport const withAppContext = (Component: any) => {\n  return (props: any) => (\n    <AppContext.Consumer>    \n      {(context) => {\n        return <Component {...props} context={context} />\n      }}\n    </AppContext.Consumer>\n  );\n};","import React from 'react';\n\nimport './loader.scss';\n\nexport const Loader = () => {\n  return (\n    <div className=\"app-loader cp-spinner cp-balls small\"></div>\n  );\n};","class PaginationHelpers {\n  public hasPreviousPage(page: string | number | undefined): boolean {\n    if (page === undefined) {\n      return false;\n    }\n\n    if (typeof page === 'string') {\n      return parseInt(page) > 1;\n    }\n\n    return page > 1;\n  }\n\n  public hasNextPage(_page: string | number, _itemsPerPage: string | number, _total: string | number | undefined): boolean {\n    if (_total === undefined) {\n      return true;\n    }\n    const page = typeof _page === 'string' ? parseInt(_page) : _page;\n    const itemsPerPage = typeof _itemsPerPage === 'string' ? parseInt(_itemsPerPage) : _itemsPerPage;\n    const total = typeof _total === 'string' ? parseInt(_total) : _total;\n\n    return page * itemsPerPage < total;\n  }\n}\n\nexport const paginationHelpers = new PaginationHelpers();","import React from 'react';\n\nimport './button.scss';\n\ninterface IProps {\n  children: any\n  type?: 'submit' | 'button' | 'reset'\n  title?: string\n  className?: string\n  onClick?: (e: any) => void\n  color?: 'gray' | 'blue' | 'green' | 'red'\n  disabled?: boolean\n}\n\nexport const Button = (props: IProps) => {\n  return (\n    <button {...props} className={`button ${props.className || ''} ${props.color || ''}`}>{props.children}</button>\n  );\n};","import React from 'react';\n\nimport './infiniteLoader.scss';\n\nexport const InfiniteLoader = () => {\n  return (\n    <div className=\"app-infinite-loader cp-spinner cp-balls small\"></div>\n  );\n};","import React from 'react';\nimport { ICustomLabels } from '../../common/models/config.model';\nimport { IPaginationState } from '../../common/models/states.model';\nimport { Button } from '../button/button.comp';\n\nimport './pagination.scss';\n\ninterface IProps {\n  pagination: IPaginationState\n  callbacks: {\n    previousPage: () => void,\n    nextPage: () => void,\n  }\n  customLabels?: ICustomLabels\n}\n\nexport const Pagination = ({ callbacks, pagination, customLabels }: IProps) => {\n  const previousTitle = customLabels?.pagination?.previousPageTitle || 'Previous page';\n  const nextTitle = customLabels?.pagination?.nextPageTitle || 'Next page';\n  return (\n    <div className=\"pagination-wrapper\">\n      <Button disabled={!pagination.hasPreviousPage} onClick={() => callbacks.previousPage()} title={previousTitle}>\n        <i className=\"fa fa-arrow-left\" aria-hidden=\"true\"></i>\n      </Button>\n      <Button disabled={!pagination.hasNextPage} onClick={() => callbacks.nextPage()} title={nextTitle}>\n        <i className=\"fa fa-arrow-right\" aria-hidden=\"true\" ></i>\n      </Button>\n    </div>\n  );\n};","import React, { useEffect } from 'react';\nimport InfiniteScroll from 'react-infinite-scroll-component';\n\nimport { IConfigDisplayField, IConfigCustomAction, ICustomLabels } from '../../common/models/config.model';\nimport { dataHelpers } from '../../helpers/data.helpers';\nimport { Button } from '../button/button.comp';\nimport { InfiniteLoader } from '../infiniteLoader/infiniteLoader.comp';\nimport { IPaginationState } from '../../common/models/states.model';\nimport { Pagination } from '../pagination/pagination.comp';\n\nimport './table.scss';\n\ninterface IProps {\n  items: any[]\n  pagination?: IPaginationState\n  callbacks: {\n    delete: ((item: any) => void) | null\n    put: ((item: any) => void) | null\n    details: ((item: any) => void) | null\n    action: (item: any, action: IConfigCustomAction) => void\n    getPreviousPage: (() => void) | null\n    getNextPage: (() => void) | null\n  }\n  fields: IConfigDisplayField[]\n  customActions?: IConfigCustomAction[]\n  customLabels?: ICustomLabels\n}\n\nexport const Table = ({ items, fields, pagination, callbacks, customActions, customLabels }: IProps) => {\n  const editLabel = customLabels?.buttons?.editItem || 'Edit';\n  const deleteLabel = customLabels?.buttons?.deleteItem || 'Delete';\n  const actionColumnHeader = customLabels?.tableColumnHeaders?.actions || 'Actions';\n  const paginationCallbacks = {\n    nextPage: callbacks.getNextPage || (() => { return; }),\n    previousPage: callbacks.getPreviousPage || (() => { return; }),\n  };\n\n  function renderTableCell(origField: IConfigDisplayField, origItem: any, value: any) {\n    if (origField.type === 'boolean') {\n      value = value ? true : false;\n    }\n\n    if (value && typeof value === 'object') {\n      return 'object';\n    }\n\n    switch (origField.type) {\n      case 'text':\n        return <span>{value}</span>;\n      case 'boolean':\n        return <div className={`bool ${value ? 'true' : 'false'}`}></div>;\n      case 'image':\n        return <img src={value || ''} alt={value || origField.label || origField.name} />;\n      case 'url':\n        let url: string = origField.url || value || '';\n\n        // Replace all url vars\n        fields.forEach((field) => {\n          const fieldValue = dataHelpers.extractDataByDataPath(origItem, field.dataPath, field.name);\n          url = url.replace(`:${field.name}`, fieldValue);\n        });\n\n        return <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">{origField.urlLabel || value}</a>;\n      case 'colorbox':\n        return <div className=\"colorbox\" style={{ backgroundColor: value }}></div>;\n      default:\n        return value;\n    }\n  }\n\n  function renderTableRow(item: any, rowIdx: number) {\n    return (\n      <tr key={`tr_${rowIdx}`}>\n        {\n          fields.map((field, fieldIdx) => {\n            const value = dataHelpers.extractDataByDataPath(item, field.dataPath, field.name);\n            return (\n              <td className={field.truncate ? 'truncate' : ''} key={`td_${rowIdx}_${fieldIdx}`}>\n                {renderTableCell(field, item, value)}\n              </td>\n            );\n          })\n        }\n        <td>\n          <div className=\"actions-wrapper\">\n            {\n              callbacks.details &&\n              <Button onClick={() => callbacks.details?.(item)} title='Details'>\n                <i className=\"fa fa-search\" aria-hidden=\"true\"></i>\n              </Button>\n            }\n            {\n              callbacks.put &&\n              <Button onClick={() => callbacks.put?.(item)} title={editLabel}>\n                <i className=\"fa fa-pencil-square-o\" aria-hidden=\"true\"></i>\n              </Button>\n            }\n            {\n              (customActions && customActions.length > 0) &&\n              customActions.map((action, idx) => (\n                <Button key={`action_${rowIdx}_${idx}`} onClick={() => callbacks.action(item, action)} title={action.name}>\n                  <i className={`fa fa-${action.icon || 'cogs'}`} aria-hidden=\"true\"></i>\n                </Button>\n              ))\n            }\n            {\n              callbacks.delete &&\n              <Button onClick={() => callbacks.delete?.(item)} title={deleteLabel}>\n                <i className=\"fa fa-times\" aria-hidden=\"true\"></i>\n              </Button>\n            }\n          </div>\n        </td>\n      </tr>\n    );\n  }\n\n  function renderTableContent() {\n    return (\n      <table className=\"pure-table\">\n        <thead>\n          <tr>\n            {\n              fields.map((field) => {\n                return <th key={`th_${field.name}`}>{field.label || field.name}</th>;\n              })\n            }\n            <th>{actionColumnHeader}</th>\n          </tr>\n        </thead>\n        <tbody>\n          {\n            items.map(renderTableRow)\n          }\n        </tbody>\n      </table>\n    );\n  }\n\n  useEffect(() => {\n    if (\n      pagination?.type === 'infinite-scroll'\n      && document.body.clientHeight <= window.innerHeight\n      && pagination?.hasNextPage\n    ) {\n      paginationCallbacks.nextPage();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  if (pagination?.type === 'infinite-scroll') {\n    return (\n      <InfiniteScroll\n        dataLength={items.length}\n        next={callbacks.getNextPage || (() => null)}\n        hasMore={pagination?.hasNextPage || false}\n        loader={<InfiniteLoader />}\n      >\n        {renderTableContent()}\n      </InfiniteScroll>\n    );\n  }\n\n  return (\n    <div className=\"table-wrapper\">\n      {renderTableContent()}\n      {\n        pagination &&\n        pagination.type === 'buttons' &&\n        <Pagination\n          callbacks={paginationCallbacks}\n          pagination={pagination}\n          customLabels={customLabels}\n        ></Pagination>\n      }\n    </div >\n  );\n}\n","import React, { useEffect } from 'react';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport Skeleton from 'react-loading-skeleton';\n\nimport { IConfigDisplayField, IConfigCustomAction, ICustomLabels } from '../../common/models/config.model';\nimport { IPaginationState } from '../../common/models/states.model';\nimport { dataHelpers } from '../../helpers/data.helpers';\nimport { Button } from '../button/button.comp';\nimport { Pagination } from '../pagination/pagination.comp';\n\nimport './cards.scss';\n\ninterface IProps {\n  items: any[]\n  pagination?: IPaginationState\n  callbacks: {\n    delete: ((item: any) => void) | null\n    put: ((item: any) => void) | null\n    details: ((item: any) => void) | null\n    action: (item: any, action: IConfigCustomAction) => void\n    getNextPage: (() => void) | null\n    getPreviousPage: (() => void) | null\n  }\n  fields: IConfigDisplayField[]\n  customActions?: IConfigCustomAction[]\n  customLabels?: ICustomLabels\n}\n\nexport const Cards = ({ items, fields, callbacks, customActions, customLabels, pagination }: IProps) => {\n  const editLabel: string = customLabels?.buttons?.editItem || 'Edit';\n  const deleteLabel: string = customLabels?.buttons?.deleteItem || 'Delete';\n  const paginationCallbacks = {\n    nextPage: callbacks.getNextPage || (() => { return; }),\n    previousPage: callbacks.getPreviousPage || (() => { return; }),\n  };\n\n  function renderRow(origField: IConfigDisplayField, origItem: any, value: any) {\n    if (origField.type === 'boolean') {\n      value = value ? true : false;\n    }\n\n    if (value && typeof value === 'object') {\n      return 'object';\n    }\n\n    switch (origField.type) {\n      case 'text':\n        return <span>{value}</span>;\n      case 'boolean':\n        return <div className={`bool ${value ? 'true' : 'false'}`}></div>;\n      case 'image':\n        if (!value) {\n          return <React.Fragment></React.Fragment>;\n        }\n        return <img src={value || ''} alt={value || origField.label || origField.name} />;\n      case 'url':\n        let url: string = origField.url || value || '';\n\n        // Replace all url vars\n        fields.forEach((field) => {\n          const fieldValue = dataHelpers.extractDataByDataPath(origItem, field.dataPath, field.name);\n          url = url.replace(`:${field.name}`, fieldValue);\n        });\n\n        return <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">{origField.urlLabel || value}</a>;\n      case 'colorbox':\n        return <div className=\"colorbox\" style={{ backgroundColor: value }}></div>;\n      default:\n        return value;\n    }\n  }\n\n  function renderActions(item: any, cardIdx: number) {\n    return (\n      <div className=\"actions-wrapper\">\n        {\n          callbacks.details &&\n          <Button onClick={() => callbacks.details?.(item)} title='Details'>\n            <i className=\"fa fa-search\" aria-hidden=\"true\"></i>\n          </Button>\n        }\n        {\n          callbacks.put &&\n          <Button onClick={() => callbacks.put?.(item)} title={editLabel}>\n            <i className=\"fa fa-pencil-square-o\" aria-hidden=\"true\"></i>\n          </Button>\n        }\n        {\n          (customActions && customActions.length > 0) &&\n          customActions.map((action, idx) => (\n            <Button key={`action_${cardIdx}_${idx}`} onClick={() => callbacks.action(item, action)} title={action.name}>\n              <i className={`fa fa-${action.icon || 'cogs'}`} aria-hidden=\"true\"></i>\n            </Button>\n          ))\n        }\n        {\n          callbacks.delete &&\n          <Button onClick={() => callbacks.delete?.(item)} title={deleteLabel}>\n            <i className=\"fa fa-times\" aria-hidden=\"true\"></i>\n          </Button>\n        }\n      </div>\n    );\n  }\n\n  function renderCard(item: any, cardIdx: number) {\n    return (\n      <div className=\"card\" key={`card_${cardIdx}`}>\n        {\n          fields.map((field, fieldIdx) => {\n            const value = dataHelpers.extractDataByDataPath(item, field.dataPath, field.name);\n            return (\n              <div className={`card-row ${field.type}`} key={`card_${cardIdx}_${fieldIdx}`}>\n                {\n                  field.type !== 'image' &&\n                  <label>{field.label || field.name}: </label>\n                }\n                {renderRow(field, item, value)}\n              </div>\n            );\n          })\n        }\n        {renderActions(item, cardIdx)}\n      </div>\n    );\n  }\n\n  function renderCardSkeleton(cardIdx: number) {\n    return (\n      <div className=\"card\" key={`card_${cardIdx}`}>\n        {\n          fields.map((field, fieldIdx) => {\n            return (\n              <div className={`card-row ${field.type}`} key={`card_${cardIdx}_${fieldIdx}`}>\n                {\n                  field.type !== 'image' &&\n                  <label>{field.label || field.name}: </label>\n                }\n                <Skeleton duration={0.6} />\n              </div>\n            );\n          })\n        }\n        {renderActions({}, cardIdx)}\n      </div>\n    );\n  }\n\n  function renderSkeletons() {\n    const startingIndex = items.length;\n    const skeletonsIndexes = Array.from(Array(pagination?.limit).keys()).map(value => value + startingIndex);\n    return skeletonsIndexes.map(renderCardSkeleton);\n  }\n\n  useEffect(() => {\n    if (\n      pagination?.type === 'infinite-scroll'\n      && document.body.clientHeight <= window.innerHeight\n      && callbacks.getNextPage\n      && pagination?.hasNextPage\n    ) {\n      callbacks.getNextPage();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  if (pagination?.type === 'infinite-scroll') {\n    return (\n      <InfiniteScroll className=\"cards-wrapper\"\n        dataLength={items.length}\n        next={callbacks.getNextPage || (() => null)}\n        hasMore={pagination?.hasNextPage || false}\n        loader={renderSkeletons()}\n      >\n        {items.map(renderCard)}\n      </InfiniteScroll>\n    );\n  }\n\n  return (\n    <React.Fragment>\n      <div className=\"cards-wrapper\">\n        {items.map(renderCard)}\n      </div>\n      {\n        pagination &&\n        pagination.type === 'buttons' &&\n        <Pagination\n          callbacks={paginationCallbacks}\n          pagination={pagination}\n        ></Pagination>\n      }\n    </React.Fragment>\n  )\n}","import React, { useState } from 'react';\nimport { orderBy } from 'natural-orderby';\nimport { toast } from 'react-toastify';\n\nimport { IConfigInputField, IConfigOptionSource, ICustomLabels } from '../../common/models/config.model';\nimport { Button } from '../button/button.comp';\nimport { withAppContext } from '../withContext/withContext.comp';\nimport { IAppContext } from '../app.context';\nimport { dataHelpers } from '../../helpers/data.helpers';\n\nimport './formRow.scss';\n\ninterface IProps {\n  context: IAppContext\n  field: IConfigInputField\n  onChange: (fieldName: string, value: any, submitAfterChange?: boolean) => void\n  showReset?: boolean\n  direction?: 'row' | 'column'\n}\n\nexport const FormRow = withAppContext(({ context, field, direction, showReset, onChange }: IProps) => {\n  const [optionSources, setOptionSources] = useState<any>({});\n  const { httpService, activeResource, config } = context;\n  const pageHeaders: any = activeResource?.requestHeaders || {};\n  const customLabels: ICustomLabels | undefined = { ...config?.customLabels, ...activeResource?.customLabels };\n  const addArrayItemLabel = customLabels?.buttons?.addArrayItem || 'Add Item';\n  const clearLabel = customLabels?.buttons?.clearInput || 'Clear';\n\n  async function loadOptionSourceFromRemote(fieldName: string, optionSource: IConfigOptionSource) {\n    try {\n      const { url, dataPath, actualMethod, requestHeaders } = optionSource;\n\n      if (!url) {\n        throw new Error(`URL option source (for field \"${fieldName}\") is empty.`);\n      }\n\n      const result = await httpService.fetch({\n        method: actualMethod || 'get',\n        origUrl: url,\n        queryParams: [],\n        headers: Object.assign({}, pageHeaders, requestHeaders || {}),\n      });\n\n      const extractedData = dataHelpers.extractDataByDataPath(result, dataPath);\n\n      if (!extractedData || !extractedData.length) {\n        throw new Error(`Option source data is empty (for field \"${fieldName}\")`);\n      }\n\n      // Map option source to fields\n      const optionSourceData = extractedData.map((option: any, idx: number) => {\n        const { valuePath, displayPath } = optionSource;\n\n        if (typeof option === 'string') {\n          return option;\n        }\n\n        return {\n          display: displayPath && option[displayPath] ? option[displayPath] : `Option ${idx + 1}`,\n          value: valuePath && option[valuePath] ? option[valuePath] : `${idx}`,\n        };\n      });\n\n      setOptionSources({\n        ...optionSources,\n        [fieldName]: optionSourceData\n      });\n    } catch (e) {\n      toast.error(e.message);\n    }\n  }\n\n  function addItemToFieldArray(e: any, originalField: IConfigInputField) {\n    e.preventDefault();\n\n    onChange(field.name, [\n      ...(originalField.value || []),\n      ''\n    ]);\n  }\n\n  function removeItemToFieldArray(originalField: IConfigInputField, idx: number) {\n    const updatedArray = [\n      ...(originalField.value || [])\n    ];\n\n    updatedArray.splice(idx, 1);\n\n    onChange(field.name, updatedArray);\n  }\n\n  function renderArrayItems(originalField: IConfigInputField) {\n    const array: any[] = originalField.value || [];\n\n    return (\n      <div className=\"array-form\">\n        {\n          array.map((item, itemIdx) => {\n            const inputField = renderFieldInput({\n              value: item,\n              name: `${originalField.name}.${itemIdx}`,\n            } as IConfigInputField, (fieldName, value) => {\n              const updatedArray = (originalField.value || []).map((localValue: any, idx: number) => {\n                if (idx === itemIdx) {\n                  return value;\n                }\n                return localValue;\n              });\n\n              onChange(originalField.name, updatedArray);\n            });\n\n            return (\n              <div className=\"array-form-item\" key={`array_form_${itemIdx}`}>\n                {inputField}\n                <i title={clearLabel} onClick={() => removeItemToFieldArray(originalField, itemIdx)} aria-label=\"Remove\" className=\"clear-input fa fa-times\"></i>\n              </div>\n            )\n          })\n        }\n        <Button className=\"add-array-item\" onClick={(e) => addItemToFieldArray(e, originalField)} title={addArrayItemLabel}>\n          <i className=\"fa fa-plus\" aria-hidden=\"true\"></i>\n        </Button>\n      </div>\n    );\n  }\n\n  function renderFieldInput(field: IConfigInputField, changeCallback: (fieldName: string, value: any, submitAfterChange?: boolean) => void) {\n    const inputProps = (defaultPlaceholder: string = '') => {\n      return {\n        value: field.value,\n        placeholder: field.placeholder || defaultPlaceholder,\n        disabled: field.readonly,\n        required: field.required,\n        onChange: (e: any) => changeCallback(field.name, e.target.value),\n      };\n    };\n\n    switch (field.type) {\n      case 'boolean':\n        return <input type=\"checkbox\" {...inputProps()} checked={field.value} onChange={(e) => changeCallback(field.name, e.target.checked, true)} />;\n      case 'select':\n        {\n          const { optionSource } = field;\n\n          if (optionSource && !optionSources[field.name]) {\n            loadOptionSourceFromRemote(field.name, optionSource);\n            return <select {...inputProps()}><option>-- Loading Options... --</option></select>\n          }\n\n          const sortBy = field.optionSource?.sortBy;\n          const finalOptions: { value: string, display: string }[] = optionSources[field.name] || field.options || [];\n          const sortedOptions = orderBy(finalOptions, typeof sortBy === 'string' ? [sortBy] : (sortBy || []));\n\n          return (\n            <select {...inputProps()}>\n              <option>-- Select --</option>\n              {\n                sortedOptions.map((option, idx) => {\n                  const key = `option_${idx}_`;\n                  if (typeof option !== 'object') {\n                    return <option key={`${key}_${option}`} value={option}>{option}</option>\n                  }\n                  return <option key={`${key}_${option.value}`} value={option.value}>{option.display || option.value}</option>\n                })\n              }\n            </select>\n          );\n        };\n      case 'object':\n        return <textarea {...inputProps(customLabels?.placeholders?.object || 'Enter JSON...')}></textarea>;\n      case 'array': {\n        const { arrayType, value } = field;\n        if (!value || !arrayType || arrayType === 'object') {\n          return <textarea {...inputProps(customLabels?.placeholders?.array || 'Enter JSON array...')}></textarea>;\n        }\n        return renderArrayItems(field);\n      }\n      case 'long-text':\n        return <textarea {...inputProps(customLabels?.placeholders?.text || 'Enter text...')}></textarea>;\n      case 'number':\n      case 'integer':\n        return <input type=\"number\" {...inputProps(customLabels?.placeholders?.number || '0')} onChange={(e) => changeCallback(field.name, e.target.valueAsNumber)} />;\n      case 'color':\n        return <input type=\"color\" {...inputProps(customLabels?.placeholders?.color || 'Enter color...')} />;\n      case 'email':\n        return <input type=\"email\" {...inputProps(customLabels?.placeholders?.email || 'Enter email...')} />;\n      case 'password':\n        return <input type=\"password\" {...inputProps(customLabels?.placeholders?.password || 'Enter password...')} />;\n      case 'hidden':\n        return <input type=\"hidden\" value={field.value} />;\n      case 'file':\n        return <input type=\"file\" accept={field.accept || '*'} placeholder={field.placeholder || customLabels?.placeholders?.file || 'Select file...'} name={field.name || 'file'} disabled={field.readonly} required={field.required} />;\n      case 'note':\n        return <p className=\"note\">{field.value}</p>;\n      case 'date':\n        return <input type=\"date\" {...inputProps(customLabels?.placeholders?.date || 'Enter date...')} />;\n      case 'text':\n      default:\n        return <input type=\"text\" {...inputProps(customLabels?.placeholders?.text || 'Enter text...')} />;\n    }\n  }\n\n  return (\n    <div className={`form-row ${direction || 'row'}`}>\n      {\n        field.type !== 'hidden' &&\n        <label>{field.label || field.originalName}{field.required ? ' *' : ''}</label>\n      }\n      {renderFieldInput(field, onChange)}\n      {\n        (showReset && !field.readonly && field.value && field.value.length > 0) &&\n        <i title={clearLabel} onClick={() => onChange(field.name, '', true)} aria-label=\"Clear\" className=\"clear-input fa fa-times\"></i>\n      }\n    </div>\n  );\n});\n","import React, { useState, useEffect } from 'react';\n\nimport { IConfigInputField, IConfigPagination } from '../../common/models/config.model';\nimport { FormRow } from '../formRow/formRow.comp';\nimport { Button } from '../button/button.comp';\n\nimport './queryParams.scss';\n\ninterface IProps {\n  initialParams: IConfigInputField[]\n  paginationConfig?: IConfigPagination\n  submitCallback: (queryParams: IConfigInputField[], reset?: boolean) => void\n}\n\nexport const QueryParams = ({ initialParams, paginationConfig, submitCallback }: IProps) => {\n  const [queryParams, setQueryParams] = useState<IConfigInputField[]>(initialParams);\n\n  function submit(e?: any) {\n    if (e) {\n      e.preventDefault();\n    }\n\n    if (paginationConfig && paginationConfig.type === 'infinite-scroll') {\n      submitCallback(queryParams, true);\n    } else {\n      submitCallback(queryParams);\n    }\n  }\n\n  function formChanged(fieldName: string, value: any, submitAfterChange?: boolean) {\n    const updatedQueryParams: IConfigInputField[] = [...queryParams].map((field) => {\n      if (field.name === fieldName) {\n        field.value = value;\n      }\n\n      return field;\n    });\n\n    setQueryParams(updatedQueryParams);\n\n    if (submitAfterChange) {\n      submit();\n    }\n  }\n\n  useEffect(() => {\n    if (paginationConfig && paginationConfig.type === 'infinite-scroll') {\n      const filteredParams = initialParams.filter(param => !['page', 'limit'].includes(param.name));\n      setQueryParams(filteredParams);\n    } else {\n      setQueryParams(initialParams);\n    }\n  }, [paginationConfig, initialParams]);\n\n  if (!queryParams.length) {\n    return <React.Fragment></React.Fragment>;\n  }\n\n  return (\n    <section className=\"query-params-form\">\n      <h5>Query Params:</h5>\n      <form onSubmit={submit}>\n        {\n          queryParams.map((queryParam, idx) => {\n            return (\n              <FormRow\n                key={`query_param_${idx}`}\n                field={queryParam}\n                onChange={formChanged}\n                showReset={!queryParam.type || queryParam.type === 'text'}\n              />\n            );\n          })\n        }\n        <Button type=\"submit\" onClick={submit}>Submit</Button>\n      </form>\n    </section>\n  );\n};","import React, { Component, RefObject, ReactChild } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './popup.scss';\nimport { ICustomLabels } from '../../common/models/config.model';\n\ninterface IPopupProps {\n  className?: string\n  style?: any\n  show: boolean\n  closeCallback: any\n  children: ReactChild\n  refCallback?: string | ((instance: HTMLDivElement | null) => void) | RefObject<HTMLDivElement> | null | undefined\n  customLabels?: ICustomLabels\n}\n\nlet portalRoot: HTMLDivElement = document.getElementById('popup-portal') as HTMLDivElement;\nif (!portalRoot) {\n  portalRoot = document.createElement('div');\n  portalRoot.setAttribute('id', 'popup-portal');\n  document.body.append(portalRoot);\n}\n\nclass PortalPopup extends Component {\n  private el: HTMLElement;\n\n  constructor(props: any) {\n    super(props);\n\n    this.el = document.createElement('div');\n  }\n\n  componentDidMount = () => {\n    portalRoot.appendChild(this.el);\n  }\n\n  componentWillUnmount = () => {\n    portalRoot.removeChild(this.el);\n  }\n\n  render() {\n    return ReactDOM.createPortal(this.props.children, this.el);\n  }\n}\n\nexport class Popup extends Component<IPopupProps> {\n  render() {\n    const style: any = Object.assign({}, { display: this.props.show ? 'block' : 'none' }, this.props.style || {});\n    const closeLabel = this.props.customLabels?.buttons?.closeForm || 'Close';\n\n    return (\n      <PortalPopup>\n        {\n          this.props.show ?\n            <div className={`popup ${this.props.className || ''}`} style={style}>\n              <div className=\"overlay\" onClick={(e: any) => this.props.closeCallback(e)}></div>\n              <div className=\"popup-content\" ref={this.props.refCallback}>\n                {this.props.children}\n                <button title={closeLabel} className=\"close-popup\" onClick={(e: any) => this.props.closeCallback(e)}>\n                  <i className=\"fa fa-times\" aria-hidden=\"true\"></i>\n                </button>\n              </div>\n            </div> :\n            null\n        }\n      </PortalPopup>\n    );\n  }\n\n  componentDidMount() {\n    document.addEventListener('keydown', this._handleKeyDown.bind(this));\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keydown', this._handleKeyDown.bind(this));\n  }\n\n  _handleKeyDown = (e: KeyboardEvent) => {\n    const { show, closeCallback } = this.props;\n\n    if (show && e.keyCode === 27) {\n      closeCallback(e);\n    }\n  }\n};","import { IConfigInputField } from '../common/models/config.model';\n\nclass FileHelpers {\n\n  public isMultipartForm(fields: IConfigInputField[]): boolean {\n    for (const fieldIndex in fields) {\n      let field = fields[fieldIndex];\n\n      if (field.type === 'file') {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  \n}\n\nexport const fileHelpers = new FileHelpers();","import React, { useState, useEffect } from 'react';\nimport { toast } from 'react-toastify';\n\nimport { Popup } from '../popup/popup.comp';\nimport {\n  IConfigInputField,\n  IConfigGetSingleMethod,\n  IConfigPostMethod,\n  IConfigPutMethod,\n  ICustomLabels\n} from '../../common/models/config.model';\nimport { FormRow } from '../formRow/formRow.comp';\nimport { Button } from '../button/button.comp';\nimport { Loader } from '../loader/loader.comp';\nimport { dataHelpers } from '../../helpers/data.helpers';\nimport { fileHelpers } from '../../helpers/file.helpers';\nimport { IAppContext } from '../app.context';\nimport { withAppContext } from '../withContext/withContext.comp';\n\nimport './formPopup.scss';\n\nconst flatten = require('flat');\nconst unflatten = require('flat').unflatten;\n\ninterface IProps {\n  context: IAppContext\n  title: string\n  fields: IConfigInputField[]\n  rawData?: any\n  getSingleConfig?: IConfigGetSingleMethod\n  methodConfig: IConfigPostMethod | IConfigPutMethod\n  closeCallback: (reloadData: boolean) => void\n  submitCallback: (body: any, containFiles: boolean) => void\n}\n\nexport const FormPopup = withAppContext(({ context, title, fields, rawData, getSingleConfig, methodConfig, submitCallback, closeCallback }: IProps) => {\n  const fieldsCopy: IConfigInputField[] = JSON.parse(JSON.stringify(fields));\n  const { httpService, activeResource, config } = context;\n  const [loading, setLoading] = useState<boolean>(true);\n  const [formFields, setFormFields] = useState<IConfigInputField[]>([]);\n  const [finalRawData, setFinalRawData] = useState<any>(null);\n  const pageHeaders: any = activeResource?.requestHeaders || {};\n  const customLabels: ICustomLabels | undefined = { ...config?.customLabels, ...activeResource?.customLabels };\n\n  async function initFormFields() {\n    let finalRawData: any = rawData || {};\n\n    if (getSingleConfig && getSingleConfig.url) {\n      try {\n        const { url, requestHeaders, actualMethod, dataPath, queryParams } = getSingleConfig;\n        const result = await httpService.fetch({\n          method: actualMethod || 'get',\n          origUrl: url,\n          queryParams,\n          headers: Object.assign({}, pageHeaders, requestHeaders || {}),\n          rawData,\n        });\n\n        const extractedData = dataHelpers.extractDataByDataPath(result, dataPath);\n\n        if (extractedData && typeof extractedData === 'object') {\n          finalRawData = extractedData;\n        }\n      } catch (e) {\n        console.error('Could not load single item\\'s data.', e);\n        toast.error('Could not load single item\\'s data.');\n      }\n    }\n\n    setFinalRawData(finalRawData); // Store the raw data for later.\n\n    const flattenData = flatten(finalRawData || {});\n\n    setFormFields(fieldsCopy.map((field) => {\n      let key = field.name;\n\n      field.originalName = field.name;\n\n      if (field.dataPath) {\n        key = `${field.dataPath}.${field.name}`;\n      }\n\n      // Changing field name to include datapath\n      // This will use us later for unflatten the final object\n      field.name = key;\n\n      if (dataHelpers.checkIfFieldIsObject(field)) {\n        if (finalRawData[key] || field.value) {\n          field.value = JSON.stringify(finalRawData[key] || field.value, null, '  ') || '';\n        }\n        return field;\n      }\n\n      if (field.type === 'array') {\n        field.value = finalRawData[key] || field.value || [];\n        return field;\n      }\n\n      if (typeof flattenData[key] !== 'undefined') {\n        field.value = flattenData[key];\n      } else {\n        // important in order to prevent controlled / uncontrolled components error\n        field.value = typeof field.value === 'undefined' ? '' : field.value;\n      }\n\n      return field;\n    }));\n\n    setLoading(false);\n  }\n\n  async function submitForm(e: any) {\n    e.preventDefault();\n\n    const finalObject: any = (methodConfig as IConfigPutMethod).includeOriginalFields ? Object.assign({}, finalRawData) : {};\n    const formData = new FormData();\n    const containFiles: boolean = fileHelpers.isMultipartForm(formFields);\n    let validationError = null;\n\n    formFields.forEach((field) => {\n      if (field.type === 'file') {\n        const fileInput: any = document.querySelector(`input[name=\"${field.name || 'file'}\"]`) as HTMLInputElement;\n\n        if (fileInput.files.length > 0) {\n          const firstFile = fileInput.files[0];\n          formData.append(field.name || 'file', firstFile, firstFile.name);\n        }\n        return;\n      }\n\n      finalObject[field.name] = field.value;\n\n      if (containFiles) {\n        formData.append(field.name, field.value);\n      }\n\n      if (field.required && field.type !== 'boolean' && !field.value) {\n        validationError = 'Please fill up all required fields.';\n      }\n\n      if (dataHelpers.checkIfFieldIsObject(field) && field.value) {\n        try {\n          finalObject[field.name] = JSON.parse(field.value);\n        } catch (e) {\n          validationError = `Invalid JSON for field \"${field.name}\".`;\n        }\n      }\n\n      if (field.type === 'boolean') {\n        finalObject[field.name] = field.value || false;\n      }\n\n      if (field.type === 'encode') {\n        finalObject[field.name] = encodeURIComponent(field.value);\n      }\n    });\n\n    if (validationError) {\n      toast.error(validationError);\n      return;\n    }\n\n    setLoading(true);\n\n    try {\n      const body = containFiles ? formData : unflatten(finalObject);\n      await submitCallback(body, containFiles);\n\n      toast.success('Great Success!');\n\n      closeCallback(true);\n    } catch (e) {\n      toast.error(e.message);\n    }\n\n    setLoading(false);\n  }\n\n  function formChanged(fieldName: string, value: any) {\n    let updatedFormFields: IConfigInputField[] = JSON.parse(JSON.stringify(formFields));\n\n    updatedFormFields = updatedFormFields.map((field: IConfigInputField) => {\n      if (field.name === fieldName) {\n        field.value = value;\n      }\n\n      return field;\n    });\n\n    setFormFields(updatedFormFields);\n  }\n\n  useEffect(() => {\n    initFormFields();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <Popup\n      show={true}\n      className=\"form-popup\"\n      closeCallback={() => closeCallback(false)}\n      customLabels={customLabels}\n    >\n      <React.Fragment>\n        <h2>{title}</h2>\n        <section>\n          {\n            loading ?\n              <Loader /> :\n              <form onSubmit={submitForm}>\n                {\n                  formFields.map((field, idx) => {\n                    return (\n                      <FormRow\n                        key={`field_${idx}`}\n                        field={field}\n                        onChange={formChanged}\n                        showReset={!field.type || field.type === 'text'}\n                      />\n                    );\n                  })\n                }\n                <div className=\"buttons-wrapper center\">\n                  <Button type=\"submit\" onClick={submitForm} color=\"green\">Submit</Button>\n                </div>\n              </form>\n          }\n        </section>\n      </React.Fragment>\n    </Popup>\n  );\n});\n","import React from 'react';\n\nimport './filterField.scss';\n\ninterface IProps {\n  onChange: (filter: string) => void\n}\n\nexport const FilterField = ({ onChange }: IProps) => {\n  return (\n    <section className=\"filter-wrapper\">\n      <h5>Filter:</h5>\n      <div className=\"form-row\">\n        <input type=\"text\" placeholder=\"Search...\" onChange={(e) => onChange(e.target.value.toLowerCase())} />\n      </div>\n    </section>\n  );\n};","import React, { useEffect, useState } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport * as QueryString from 'query-string';\nimport { toast } from 'react-toastify';\nimport { orderBy } from 'natural-orderby';\nimport { find, remove, isEqual } from 'lodash';\n\nimport { IAppContext } from '../app.context';\nimport { IConfigResource, IConfigMethods, IConfigGetAllMethod, IConfigPostMethod, IConfigPutMethod, IConfigDeleteMethod, IConfigInputField, IConfigCustomAction, IConfigGetSingleMethod, ICustomLabels, IConfigPagination } from '../../common/models/config.model';\nimport { IPaginationState } from '../../common/models/states.model';\nimport { Loader } from '../loader/loader.comp';\nimport { dataHelpers } from '../../helpers/data.helpers';\nimport { paginationHelpers } from '../../helpers/pagination.helpers';\nimport { Table } from '../table/table.comp';\nimport { Cards } from '../cards/cards.comp';\nimport { QueryParams } from '../queryParams/queryParams.comp';\nimport { FormPopup } from '../formPopup/formPopup.comp';\nimport { FilterField } from '../filterField/filterField.comp';\nimport { useLocation } from 'react-router';\n\nimport './resourceItems.scss';\n\ninterface IPopupProps {\n  type: 'add' | 'update' | 'action'\n  title: string\n  config: IConfigPostMethod | IConfigPutMethod\n  submitCallback: (body: any, containFiles: boolean) => void\n  getSingleConfig?: IConfigGetSingleMethod\n  rawData?: {}\n}\n\ninterface IProps {\n  context: IAppContext\n  activeResource: IConfigResource | null\n  openedPopupState: IPopupProps | null\n  isSubResource: boolean\n  activePathVars?: {}\n}\n\nconst buildInitQueryParamsAndPaginationState = (\n  initQueryParams: IConfigInputField[],\n  paginationConfig?: IConfigPagination,\n): {\n  initQueryParams: IConfigInputField[],\n  initialPagination?: IPaginationState,\n} => {\n  const initialPagination: IPaginationState | undefined = paginationConfig ? {\n    type: paginationConfig.type,\n    page: parseInt(paginationConfig.params?.page?.value || '1'),\n    limit: parseInt(paginationConfig.params?.limit?.value || '10'),\n    descending: paginationConfig.params?.descending?.value === 'true' || false,\n    hasPreviousPage: false,\n    hasNextPage: false,\n    sortBy: paginationConfig.params?.sortBy?.value,\n  } : undefined;\n\n  if (paginationConfig) {\n    if (!find(initQueryParams, { name: 'page' })) {\n      initQueryParams.push({\n        name: paginationConfig?.params?.page?.name,\n        label: paginationConfig?.params?.page?.label || 'Page',\n        value: initialPagination?.page\n      });\n    }\n\n    if (paginationConfig?.params?.limit && !find(initQueryParams, { name: 'limit' })) {\n      initQueryParams.push({\n        name: paginationConfig.params.limit.name,\n        label: paginationConfig.params.limit.label || 'Limit',\n        value: initialPagination?.limit\n      });\n    }\n\n    if (paginationConfig?.params?.descending && !find(initQueryParams, { name: 'descending' })) {\n      initQueryParams.push({\n        name: paginationConfig.params.descending.name,\n        label: paginationConfig.params.descending.label || 'Descending',\n        value: initialPagination?.descending\n      });\n    }\n\n    if (paginationConfig?.params?.sortBy && !find(initQueryParams, { name: 'sortBy' })) {\n      initQueryParams.push({\n        name: paginationConfig.params.sortBy.name,\n        label: 'Sort by',\n        value: initialPagination?.sortBy\n      });\n    }\n  }\n\n  return {\n    initQueryParams,\n    initialPagination\n  };\n};\n\nexport const ResourceItems = ({ context, activeResource, openedPopupState, activePathVars, isSubResource }: IProps) => {\n  const { page } = useParams();\n  let { pathname } = useLocation();\n  if (pathname[0] === '/') {\n    pathname = pathname.slice(1);\n  }\n  const { push, location } = useHistory();\n  const { error, setError, httpService, config, activeItem, setActiveItem, setActiveResource } = context;\n  const pageHeaders: any = activeResource?.requestHeaders || {};\n  const pageMethods: IConfigMethods | undefined = activeResource?.methods;\n  const customActions: IConfigCustomAction[] = activeResource?.customActions || [];\n  const getAllConfig: IConfigGetAllMethod | undefined = pageMethods?.getAll;\n  const paginationConfig = getAllConfig?.pagination;\n  const infiniteScroll = paginationConfig?.type === 'infinite-scroll';\n  const getSingleConfig: IConfigGetSingleMethod | undefined = pageMethods?.getSingle;\n  const putConfig: IConfigPutMethod | undefined = pageMethods?.put;\n  const deleteConfig: IConfigDeleteMethod | undefined = pageMethods?.delete;\n  const customLabels: ICustomLabels | undefined = { ...config?.customLabels, ...activeResource?.customLabels };\n  const editItemFormTitle = customLabels?.formTitles?.editItem || 'Update Item';\n  const [openedPopup, setOpenedPopup] = useState<null | IPopupProps>(openedPopupState);\n  const { initQueryParams, initialPagination } = buildInitQueryParamsAndPaginationState(getAllConfig?.queryParams || [], paginationConfig);\n  const [loading, setLoading] = useState<boolean>(false);\n  const [queryParams, setQueryParams] = useState<IConfigInputField[]>(initQueryParams);\n  const [pagination, setPagination] = useState<IPaginationState | undefined>(initialPagination);\n  const [items, setItems] = useState<any[]>([]);\n  const [filter, setFilter] = useState<string>('');\n\n  function refreshItems() {\n    if (pagination?.type === 'infinite-scroll') {\n      setItems([]);\n      const updatedParams = [...queryParams];\n      remove(updatedParams, param => ['page', 'limit'].includes(param.name));\n      setQueryParams(buildInitQueryParamsAndPaginationState(updatedParams, paginationConfig).initQueryParams);\n    } else {\n      getAllRequest();\n    }\n  }\n\n  function closeFormPopup(refreshData: boolean = false) {\n    setOpenedPopup(null);\n\n    if (refreshData === true) {\n      refreshItems();\n    }\n  }\n\n  async function openEditPopup(rawData: any) {\n    const params: IPopupProps = {\n      rawData,\n      type: 'update',\n      title: editItemFormTitle,\n      config: putConfig as IConfigPutMethod,\n      getSingleConfig,\n      submitCallback: async (body: any, containFiles: boolean) => {\n        return await updateItem(body, rawData, containFiles);\n      }\n    };\n\n    setOpenedPopup(params);\n  }\n\n  function openCustomActionPopup(rawData: any, action: IConfigCustomAction) {\n    const params: IPopupProps = {\n      rawData,\n      type: 'action',\n      title: action.name || 'Custom Action',\n      config: action as IConfigCustomAction,\n      submitCallback: async (body: any, containFiles: boolean) => {\n        return await performAction(body, rawData, action, containFiles);\n      }\n    };\n\n    setOpenedPopup(params);\n  }\n\n  async function performAction(body: any, rawData: any, action: IConfigCustomAction, containFiles: boolean) {\n    const { url, requestHeaders, actualMethod } = action;\n\n    return await httpService.fetch({\n      method: actualMethod || 'put',\n      origUrl: url,\n      rawData,\n      body: containFiles ? body : JSON.stringify(body),\n      headers: {\n        ...pageHeaders,\n        ...(requestHeaders || {}),\n        ...(containFiles ? {} : { 'content-type': 'application/json' })\n      },\n      responseType: 'boolean'\n    });\n  }\n\n  function toItemDetails(item: any) {\n    if (!getSingleConfig || !getSingleConfig.id) {\n      throw new Error('Get single method is not defined.');\n    }\n    let detailPath = getSingleConfig.id;\n    detailPath = detailPath[0] === '/' ? detailPath : `/${detailPath}`;\n    const urlParamNames = detailPath\n      .split(/\\/[-\\w]+\\//gm)\n      .filter(text => !!text)\n      .map(p => p.replace(':', ''));\n\n    if (urlParamNames.length > 2) {\n      setError('Depth of more than 2 resources is not supported');\n      return;\n    }\n\n    if (urlParamNames.length === 0) {\n      setError(`No url parameters found in ${getSingleConfig.id}`);\n      return;\n    }\n\n    // We replace the first url param with active item value if it exists\n    if (isSubResource && urlParamNames.length > 1) {\n      const parentUrlParamName = urlParamNames[0];\n      if (activeItem[parentUrlParamName]) {\n        const param = `:${parentUrlParamName}`;\n        detailPath = detailPath.replace(new RegExp(param, 'g'), activeItem[parentUrlParamName] as string);\n      }\n    }\n\n    Object.keys(item).forEach((key) => {\n      const urlParamName = `:${key}`;\n      detailPath = detailPath.replace(new RegExp(urlParamName, 'g'), item[key] as string);\n    });\n\n    if (isSubResource) {\n      setActiveResource(activeResource);\n    }\n    setActiveItem(null);\n    push(detailPath);\n  }\n\n  async function updateItem(body: any, rawData: any, containFiles?: boolean) {\n    if (!putConfig) {\n      throw new Error('Put method is not defined.');\n    }\n\n    const { url, requestHeaders, actualMethod } = putConfig;\n\n    return await httpService.fetch({\n      method: actualMethod || 'put',\n      origUrl: url,\n      rawData,\n      body: containFiles ? body : JSON.stringify(body),\n      headers: {\n        ...pageHeaders,\n        ...(requestHeaders || {}),\n        ...(containFiles ? {} : { 'content-type': 'application/json' })\n      },\n      responseType: 'boolean'\n    });\n  }\n\n  async function deleteItem(item: any) {\n    const approved: boolean = window.confirm('Are you sure you want to delete this item?');\n\n    if (!approved) {\n      return;\n    }\n\n    try {\n      if (!deleteConfig) {\n        throw new Error('Delete method is not defined.');\n      }\n\n      const { url, requestHeaders, actualMethod } = deleteConfig;\n      const success = await httpService.fetch({\n        method: actualMethod || 'delete',\n        origUrl: url,\n        rawData: item,\n        headers: Object.assign({}, pageHeaders, requestHeaders || {}),\n        responseType: 'boolean'\n      });\n\n      if (success) {\n        refreshItems();\n      }\n    } catch (e) {\n      toast.error(e.message);\n    }\n  }\n\n  function extractQueryParams(params: IConfigInputField[]): IConfigInputField[] {\n    const parsedParams = QueryString.parse(location.search);\n    const finalQueryParams = params.map((queryParam) => {\n      if (typeof parsedParams[queryParam.name] !== 'undefined') {\n        queryParam.value = queryParam.type === 'boolean' ? (parsedParams[queryParam.name] === 'true') : decodeURIComponent(parsedParams[queryParam.name] as any);\n      } else {\n        queryParam.value = queryParam.value !== undefined ? queryParam.value : '';\n      }\n      return queryParam;\n    });\n\n    setPagination(getUpdatedPaginationState(finalQueryParams))\n\n    return finalQueryParams;\n  }\n\n  async function getAllRequest() {\n    if (infiniteScroll && pagination?.page !== parseInt(paginationConfig?.params?.page?.value || '1')) {\n      setLoading(false);\n    } else {\n      setLoading(true);\n    }\n\n    setError(null);\n\n    try {\n      if (!getAllConfig) {\n        throw new Error('Get all method is not defined.');\n      }\n\n      if (paginationConfig && !pagination) {\n        throw new Error('Pagination not initialized.');\n      }\n\n      const { url, requestHeaders, actualMethod, dataPath, sortBy, dataTransform } = getAllConfig;\n      const result = await httpService.fetch({\n        method: actualMethod || 'get',\n        origUrl: url,\n        rawData: activePathVars,\n        queryParams,\n        headers: Object.assign({}, pageHeaders, requestHeaders || {})\n      });\n      let extractedData = dataHelpers.extractDataByDataPath(result, dataPath);\n\n      if (!extractedData) {\n        throw new Error('Could not extract data from response.');\n      }\n\n      if (!Array.isArray(extractedData)) {\n        throw new Error('Extracted data is invalid.');\n      }\n\n      if (typeof dataTransform === 'function') {\n        extractedData = await dataTransform(extractedData);\n      }\n\n      const orderedItems = orderBy(extractedData, typeof sortBy === 'string' ? [sortBy] : (sortBy || []));\n\n      if (paginationConfig) {\n        const total = paginationConfig.fields?.total ? dataHelpers.extractDataByDataPath(result, paginationConfig.fields.total.dataPath) : undefined;\n        const newPaginationState = getUpdatedPaginationState(queryParams, total);\n        if (newPaginationState) {\n          setPagination(newPaginationState);\n        }\n      }\n\n      if (infiniteScroll) {\n        setItems([...items, ...orderedItems]);\n      } else {\n        setItems(orderedItems);\n      }\n\n    } catch (e) {\n      setError(e.message);\n    }\n\n    setLoading(false);\n  }\n\n\n  // const getAllRequestCallback = useCallback(() => { getAllRequest(queryParams) }, [getAllRequest, queryParams])\n\n  function submitQueryParams(updatedParams: IConfigInputField[], reset?: boolean) {\n    if (loading) {\n      return;\n    }\n\n    if (reset) {\n      setItems([]);\n      remove(updatedParams, param => ['page', 'limit'].includes(param.name));\n      updatedParams = buildInitQueryParamsAndPaginationState(updatedParams, paginationConfig).initQueryParams;\n    }\n\n    setQueryParams(updatedParams);\n    setPagination(getUpdatedPaginationState(updatedParams));\n\n    let paramsToUrl = [...updatedParams];\n\n    if (paginationConfig?.type === 'infinite-scroll') {\n      paramsToUrl = paramsToUrl.filter(param => !['page', 'limit'].includes(param.name));\n    }\n\n    // Building query string\n    const queryState: string = paramsToUrl.map((queryParam, idx) => {\n      let value = queryParam.value;\n\n      if (queryParam.type === 'select' && value === '-- Select --') {\n        // default value means nothing was selected and thus we explicitly\n        // empty out the value in this case; otherwise the string '-- Select --'\n        // is used as the value for the given queryParams\n        value = '';\n      }\n\n      return `${idx === 0 ? '?' : ''}${queryParam.name}=${encodeURIComponent(value || '')}`;\n    }).join('&');\n\n    // Pushing query state to url\n    if (page && queryState) {\n      push(queryState);\n    }\n  }\n\n  function getUpdatedPaginationState(updatedParams: IConfigInputField[], total?: number): IPaginationState | undefined {\n    if (!paginationConfig) {\n      return;\n    }\n\n    const newState: IPaginationState = pagination ? pagination : {\n      type: paginationConfig.type,\n      page: parseInt(paginationConfig.params?.page?.value || '1'),\n      limit: parseInt(paginationConfig.params?.limit?.value || '10'),\n      descending: paginationConfig.params?.descending?.value === 'true' || false,\n      hasPreviousPage: false,\n      hasNextPage: false,\n      sortBy: paginationConfig.params?.sortBy?.value,\n    };\n\n    newState.total = total !== undefined ? total : pagination?.total;\n    newState.page = parseInt(updatedParams.find(param => param.name === paginationConfig?.params?.page?.name)?.value || newState.page);\n    newState.limit = parseInt(updatedParams.find(param => param.name === paginationConfig?.params?.limit?.name)?.value || newState.limit);\n    newState.descending = updatedParams.find(param => param.name === paginationConfig?.params?.descending?.name)?.value === 'true' || newState.descending;\n    newState.sortBy = updatedParams.find(param => param.name === paginationConfig?.params?.sortBy?.name)?.value || newState.sortBy;\n    newState.hasPreviousPage = paginationHelpers.hasPreviousPage(newState.page);\n    newState.hasNextPage = paginationHelpers.hasNextPage(newState.page, newState.limit, newState.total);\n\n    return newState;\n  }\n\n  function renderItemsUI() {\n    if (loading) {\n      return <Loader />;\n    }\n\n    const fields = getAllConfig?.fields || getAllConfig?.display?.fields || [];\n    const fieldsToFilter = fields.filter((field) => (field.filterable)).map((field) => field.name);\n    let filteredItems = items;\n\n    if (filter && fieldsToFilter.length) {\n      filteredItems = items.filter((item) => {\n        let passFilter = false;\n        fieldsToFilter.forEach((fieldName) => {\n          const value = item[fieldName];\n          if (typeof value === 'string' && value.toLowerCase().indexOf(filter) >= 0) {\n            passFilter = true;\n          }\n        })\n        return passFilter;\n      });\n    }\n\n    if (!filteredItems.length) {\n      return <div className=\"app-error\">Nothing to see here. Result is empty.</div>;\n    }\n\n    const getNextPage = paginationConfig ? () => {\n      if (pagination?.page !== undefined && queryParams.length > 0) {\n        const newPage = pagination.page + 1;\n        const updatedParams = queryParams.map((param) => {\n          if (param.name === paginationConfig.params?.page?.name) {\n            return {\n              ...param,\n              value: newPage\n            }\n          }\n          return param;\n        });\n        submitQueryParams(updatedParams);\n      }\n    } : null;\n\n    const getPreviousPage = paginationConfig ? () => {\n      if (pagination?.page !== undefined && pagination.page > 1 && queryParams.length > 0) {\n        const newPage = pagination.page - 1;\n        const updatedParams = queryParams.map((param) => {\n          if (param.name === paginationConfig.params?.page?.name) {\n            return {\n              ...param,\n              value: newPage\n            }\n          }\n          return param;\n        });\n        submitQueryParams(updatedParams);\n      }\n    } : null;\n\n    const itemsCallbacks = {\n      delete: deleteConfig ? deleteItem : null,\n      put: putConfig ? openEditPopup : null,\n      details: getSingleConfig?.id ? toItemDetails : null,\n      action: customActions.length ? openCustomActionPopup : () => { },\n      getNextPage,\n      getPreviousPage,\n    };\n\n    if (getAllConfig?.display.type === 'cards') {\n      return (\n        <Cards\n          pagination={pagination}\n          callbacks={itemsCallbacks}\n          fields={fields}\n          items={filteredItems}\n          customActions={customActions}\n          customLabels={customLabels}\n        />\n      );\n    }\n\n    return (\n      <Table\n        pagination={pagination}\n        callbacks={itemsCallbacks}\n        fields={fields}\n        items={filteredItems}\n        customActions={customActions}\n        customLabels={customLabels}\n      />\n    );\n  }\n\n  function renderPaginationStateLabel() {\n    if (loading || !items.length) {\n      return;\n    }\n    const currentPage = pagination?.page !== undefined ? pagination.page : 1;\n    const currentLimit = pagination?.limit !== undefined ? pagination.limit : 10;\n    const currentCountFrom = ((currentPage - 1) * currentLimit) + 1;\n    const currentCountTo = currentCountFrom + items.length - 1;\n    let label: string = `Showing results ${currentCountFrom}-${currentCountTo} out of ${pagination?.total} items`;\n\n    if (pagination?.type === 'infinite-scroll') {\n      label = `Showing ${pagination?.total} items`;\n    }\n\n    if (customLabels?.pagination?.itemsCount) {\n      label = customLabels?.pagination?.itemsCount\n        .replace(':currentCountFrom', currentCountFrom as any)\n        .replace(':currentCountTo', currentCountFrom as any)\n        .replace(':totalCount', pagination?.total as any);\n    }\n\n    return (\n      <p className=\"center pagination-state\">\n        {label}\n      </p>\n    );\n  }\n\n  useEffect(() => {\n    const { initQueryParams, initialPagination } = buildInitQueryParamsAndPaginationState(getAllConfig?.queryParams || [], paginationConfig);\n\n    setItems([]);\n    const newParams = extractQueryParams(initQueryParams);\n    if (isSubResource && !isEqual(newParams, queryParams)) {\n      setQueryParams(newParams);\n    }\n    if (!isSubResource) {\n      setQueryParams(newParams);\n    }\n    setPagination(initialPagination);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [activeResource, activePathVars]);\n\n  useEffect(() => {\n    // Load data when query params \n    if (isSubResource === false) {\n      getAllRequest();\n    } else if (activeItem) {\n      getAllRequest();\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [queryParams, activeItem]);\n\n  useEffect(() => {\n    setOpenedPopup(openedPopupState);\n  }, [openedPopupState]);\n\n  const fields = getAllConfig?.fields || getAllConfig?.display?.fields || [];\n  const fieldsToFilter = fields.filter((field) => (field.filterable)).map((field) => field.name);\n\n  return (\n    <React.Fragment>\n      <QueryParams\n        initialParams={queryParams}\n        paginationConfig={paginationConfig}\n        submitCallback={submitQueryParams}\n      />\n      {\n        fieldsToFilter.length > 0 &&\n        <FilterField onChange={setFilter} />\n      }\n      {\n        pagination?.total &&\n        renderPaginationStateLabel()\n      }\n      {\n        error ?\n          <div className=\"app-error\">{error}</div> :\n          renderItemsUI()\n      }\n      {\n        openedPopup &&\n        <FormPopup\n          title={openedPopup.title}\n          closeCallback={closeFormPopup}\n          submitCallback={openedPopup.submitCallback}\n          fields={openedPopup.config?.fields || []}\n          rawData={openedPopup.rawData}\n          getSingleConfig={openedPopup.getSingleConfig}\n          methodConfig={openedPopup.config}\n        />\n      }\n    </React.Fragment>\n  )\n}","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { matchPath, useLocation } from 'react-router';\n\nimport { IAppContext } from '../app.context';\nimport { IConfigResource, IConfigMethods, IConfigPostMethod, IConfigPutMethod, IConfigGetSingleMethod, ICustomLabels } from '../../common/models/config.model';\nimport { withAppContext } from '../withContext/withContext.comp';\nimport { ResourceItems } from '../resourceItems/resourceItems.comp';\nimport { Button } from '../button/button.comp';\n\nimport './page.scss';\n\ninterface IProps {\n  context: IAppContext\n}\n\ninterface IPopupProps {\n  type: 'add' | 'update' | 'action'\n  title: string\n  config: IConfigPostMethod | IConfigPutMethod\n  submitCallback: (body: any, containFiles: boolean) => void\n  getSingleConfig?: IConfigGetSingleMethod\n  rawData?: {}\n}\n\nconst PageComp = ({ context }: IProps) => {\n  const { page } = useParams();\n  let { pathname } = useLocation();\n  if (pathname[0] === '/') {\n    pathname = pathname.slice(1);\n  }\n  const { activeResource, httpService, config, activePathVars, setActivePathVars, setActiveResource } = context;\n  const resources = config?.resources;\n  const pageHeaders: any = activeResource?.requestHeaders || {};\n  const pageMethods: IConfigMethods | undefined = activeResource?.methods;\n  const postConfig: IConfigPostMethod | undefined = pageMethods?.post;\n  const customLabels: ICustomLabels | undefined = { ...config?.customLabels, ...activeResource?.customLabels };\n  const addItemLabel = customLabels?.buttons?.addItem || '+ Add Item';\n  const addItemFormTitle = customLabels?.formTitles?.addItem || 'Add Item';\n  const [openedPopup, setOpenedPopup] = useState<null | IPopupProps>(null);\n\n\n  function renderPageContent() {\n    return (\n      <ResourceItems\n        context={context}\n        activeResource={activeResource}\n        openedPopupState={openedPopup}\n        isSubResource={false}\n        activePathVars={activePathVars}\n      />\n    )\n  }\n  async function addItem(body: any, containFiles?: boolean) {\n    if (!postConfig) {\n      throw new Error('Post method is not defined.');\n    }\n\n    const { url, requestHeaders, actualMethod } = postConfig;\n\n    return await httpService.fetch({\n      method: actualMethod || 'post',\n      origUrl: url,\n      body: containFiles ? body : JSON.stringify(body),\n      headers: {\n        ...pageHeaders,\n        ...(requestHeaders || {}),\n        ...(containFiles ? {} : { 'content-type': 'application/json' })\n      },\n      responseType: 'boolean'\n    });\n  }\n\n  function getPageMatch(_resources?: IConfigResource[]): { matchingResource: IConfigResource, pathVars: { [key: string]: string } } | null {\n    if (_resources === undefined || _resources.length === 0) {\n      return null;\n    }\n    let pathVars = {};\n    const nextactiveResource: IConfigResource | undefined = _resources?.find((page, pIdx) => {\n      let match = matchPath(pathname, page.id);\n      pathVars = match ? match.params : {};\n      return match?.isExact || (pIdx + 1) === parseInt(pathname || '')\n    });\n    if (nextactiveResource !== undefined) {\n      return { matchingResource: nextactiveResource, pathVars };\n    }\n\n    if (!_resources || _resources.length === 0) {\n      return null;\n    }\n\n    // If no match on resources, we call the matching function on all their sub-resources \n    const allSubResources = _resources.reduce((allSubR: IConfigResource[], r) => {\n      if (r.subResources) {\n        return [...allSubR, ...r.subResources];\n      }\n      return allSubR;\n    }, []);\n\n    return getPageMatch(allSubResources);\n  }\n\n  useEffect(() => {\n    const { matchingResource, pathVars } = getPageMatch(resources) || { matchingResource: null, pathVars: {} };\n\n    setActivePathVars(pathVars);\n    setActiveResource(matchingResource);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [page, pathname]);\n\n\n  return (\n    <div className=\"app-page\">\n      <header className=\"app-page-header\">\n        <hgroup>\n          <h2>{activeResource?.name}</h2>\n          {\n            activeResource?.description &&\n            <h4>{activeResource?.description}</h4>\n          }\n        </hgroup>\n        {\n          postConfig &&\n          <Button className=\"add-item\" color=\"green\" onClick={() => setOpenedPopup({ type: 'add', title: addItemFormTitle, config: postConfig, submitCallback: addItem })}>{addItemLabel}</Button>\n        }\n      </header>\n      <main className=\"app-page-content\">\n        {renderPageContent()}\n      </main>\n    </div>\n  );\n}\n\nexport const Page = withAppContext(PageComp);\n","import { IConfigResource } from '../common/models/config.model';\n\nclass RoutesHelpers {\n  public detailRoutesConfig(resources?: IConfigResource[]): { resource: IConfigResource, route: string }[] {\n    const detailRoutesConfig: { resource: IConfigResource, route: string }[] = resources?.reduce((acc: { resource: IConfigResource, route: string }[], resource) => {\n      const detailPageId = resource.methods?.getSingle?.id;\n      if (detailPageId) {\n        const route = `/${detailPageId}`;\n        acc.push({\n          route,\n          resource,\n        })\n      }\n      return acc;\n    }, []) || [];\n\n    const subResourcesDef = resources?.reduce((acc: { sub: IConfigResource[], parentId: string }[], resource) => {\n      if (resource.subResources) {\n        acc.push({\n          sub: resource.subResources,\n          parentId: resource.id\n        });\n      }\n      return acc;\n    }, []) || [];\n\n    if (subResourcesDef.length > 0) {\n      const subRoutes = subResourcesDef.map(subDef => this.detailRoutesConfig(subDef.sub)).flat();\n\n      return [...subRoutes, ...detailRoutesConfig];\n    }\n\n    return detailRoutesConfig;\n  }\n\n  public subResourceRoutes(resources?: IConfigResource[]): string[] {\n    if (!resources) {\n      return [];\n    }\n\n    const subResources: IConfigResource[] = resources.reduce((allSubR: IConfigResource[], r) => {\n      if (r.subResources) {\n        return [...allSubR, ...r.subResources];\n      }\n      return allSubR;\n    }, []);\n\n    if (subResources.length === 0) {\n      return [];\n    }\n\n    const subRoutes = subResources.map(sub => `/${sub.id}`);\n    const deeperRoutes = this.subResourceRoutes(subResources);\n\n    return [...subRoutes, ...deeperRoutes];\n  }\n}\n\nexport const routesHelpers = new RoutesHelpers();","import React from 'react';\n\nimport { IConfigDisplayField, ICustomLabels } from '../../common/models/config.model';\nimport { dataHelpers } from '../../helpers/data.helpers';\n\nimport './details.scss';\n\ninterface IProps {\n  item?: any\n  fields: IConfigDisplayField[]\n  customLabels?: ICustomLabels\n}\n\nexport const Details = ({ item, fields, customLabels }: IProps) => {\n  function renderRow(origField: IConfigDisplayField, value: any) {\n    if (value && typeof value === 'object') {\n      return 'object';\n    }\n\n    switch (origField.type) {\n      case 'text':\n        return <span>{value}</span>;\n      case 'boolean':\n        return <div className={`bool ${value ? 'true' : 'false'}`}></div>;\n      case 'image':\n        return value ? <img src={value || ''} alt={value || origField.label || origField.name} /> : null;\n      case 'url':\n        const url: string = (origField.url || value || '').replace(`:${origField.name}`, value);\n        return <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">{value}</a>;\n      case 'colorbox':\n        return <div className=\"colorbox\" style={{ backgroundColor: value }}></div>;\n      default:\n        return value;\n    }\n  }\n\n  return (\n    <div className=\"details\" key={`details`}>\n      {\n        item &&\n        fields.map((field, fieldIdx) => {\n          const value = dataHelpers.extractDataByDataPath(item, field.dataPath, field.name);\n          return (\n            <div className={`details-row ${field.type}`} key={`details_${fieldIdx}`}>\n              {\n                field.type !== 'image' &&\n                <label>{field.label || field.name}: </label>\n              }\n              {renderRow(field, value)}\n            </div>\n          );\n        })\n      }\n    </div>\n  );\n}","import React, { useState, useEffect } from 'react';\nimport { toast } from 'react-toastify';\n\nimport { IAppContext } from '../app.context';\nimport { dataHelpers } from '../../helpers/data.helpers';\nimport { routesHelpers } from '../../helpers/routes.helpers';\nimport { IConfigResource, IConfigMethods, IConfigPostMethod, IConfigPutMethod, IConfigDeleteMethod, IConfigCustomAction, IConfigGetSingleMethod, ICustomLabels, IConfigDisplayField } from '../../common/models/config.model';\nimport { withAppContext } from '../withContext/withContext.comp';\nimport { Loader } from '../loader/loader.comp';\nimport { ResourceItems } from '../resourceItems/resourceItems.comp';\nimport { Button } from '../button/button.comp';\nimport { FormPopup } from '../formPopup/formPopup.comp';\nimport { matchPath, useLocation, useHistory } from 'react-router';\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport { Details } from '../details/details.comp';\n\nimport './detailPage.scss';\n\ninterface IProps {\n  context: IAppContext\n}\n\ninterface IPopupProps {\n  type: 'add' | 'update' | 'action'\n  title: string\n  config: IConfigPostMethod | IConfigPutMethod\n  submitCallback: (body: any, containFiles: boolean) => void\n  getSingleConfig?: IConfigGetSingleMethod\n  rawData?: {}\n}\n\nconst DetailPageComp = ({ context }: IProps) => {\n  let { pathname } = useLocation();\n  const { goBack } = useHistory()\n  if (pathname[0] === '/') {\n    pathname = pathname.slice(1);\n  }\n  const { activeResource, setActiveResource, error, setError, httpService, config, activeItem, setActiveItem, detailPagesConfig, activePathVars, setActivePathVars } = context;\n  let subResources = activeResource?.subResources;\n  const pageHeaders: any = activeResource?.requestHeaders || {};\n  const pageMethods: IConfigMethods | undefined = activeResource?.methods;\n  const customActions: IConfigCustomAction[] = activeResource?.customActions || [];\n  const getSingleConfig: IConfigGetSingleMethod | undefined = pageMethods?.getSingle;\n  const putConfig: IConfigPutMethod | undefined = pageMethods?.put;\n  const deleteConfig: IConfigDeleteMethod | undefined = pageMethods?.delete;\n  const customLabels: ICustomLabels | undefined = { ...config?.customLabels, ...activeResource?.customLabels };\n  const editItemFormTitle = customLabels?.formTitles?.editItem || 'Update Item';\n  const [openedPopup, setOpenedPopup] = useState<null | IPopupProps>(null);\n  const [loading, setLoading] = useState<boolean>(false);\n  let detailRouteConfigs = routesHelpers.detailRoutesConfig(config?.resources);\n  // let activePathVars = getPageMatch(detailRouteConfigs) || undefined;\n  const [activeTabIndex, setActiveTabIndex] = useState<number>(0);\n  const [pageName, setPageName] = useState<string | null>(null);\n\n  const callbacks = {\n    delete: deleteConfig ? deleteItem : null,\n    put: putConfig ? openEditPopup : null,\n    action: customActions.length ? openCustomActionPopup : () => { },\n  };\n\n  const getAllConfig = activeResource?.methods?.getAll;\n  const fields: IConfigDisplayField[] = getSingleConfig?.fields || getAllConfig?.fields || getAllConfig?.display?.fields || [];\n\n  function closeFormPopup(refreshData: boolean = false) {\n    setOpenedPopup(null);\n\n    if (refreshData === true) {\n      setActiveItem(null);\n    }\n  }\n\n  async function openEditPopup(rawData: any) {\n    const params: IPopupProps = {\n      rawData,\n      type: 'update',\n      title: editItemFormTitle,\n      config: putConfig as IConfigPutMethod,\n      getSingleConfig,\n      submitCallback: async (body: any, containFiles: boolean) => {\n        return await updateItem(body, rawData, containFiles);\n      }\n    };\n\n    setOpenedPopup(params);\n  }\n\n  function openCustomActionPopup(rawData: any, action: IConfigCustomAction) {\n    const params: IPopupProps = {\n      rawData,\n      type: 'action',\n      title: action.name || 'Custom Action',\n      config: action as IConfigCustomAction,\n      submitCallback: async (body: any, containFiles: boolean) => {\n        return await performAction(body, rawData, action, containFiles);\n      }\n    };\n\n    setOpenedPopup(params);\n  }\n\n  async function performAction(body: any, rawData: any, action: IConfigCustomAction, containFiles: boolean) {\n    const { url, requestHeaders, actualMethod } = action;\n\n    return await httpService.fetch({\n      method: actualMethod || 'put',\n      origUrl: url,\n      rawData,\n      body: containFiles ? body : JSON.stringify(body),\n      headers: {\n        ...pageHeaders,\n        ...(requestHeaders || {}),\n        ...(containFiles ? {} : { 'content-type': 'application/json' })\n      },\n      responseType: 'boolean'\n    });\n  }\n\n  async function updateItem(body: any, rawData: any, containFiles?: boolean) {\n    if (!putConfig) {\n      throw new Error('Put method is not defined.');\n    }\n\n    const { url, requestHeaders, actualMethod } = putConfig;\n\n    return await httpService.fetch({\n      method: actualMethod || 'put',\n      origUrl: url,\n      rawData,\n      body: containFiles ? body : JSON.stringify(body),\n      headers: {\n        ...pageHeaders,\n        ...(requestHeaders || {}),\n        ...(containFiles ? {} : { 'content-type': 'application/json' })\n      },\n      responseType: 'boolean'\n    });\n  }\n\n  async function deleteItem(item: any) {\n    const approved: boolean = window.confirm('Are you sure you want to delete this item?');\n\n    if (!approved) {\n      return;\n    }\n\n    try {\n      if (!deleteConfig) {\n        throw new Error('Delete method is not defined.');\n      }\n\n      const { url, requestHeaders, actualMethod } = deleteConfig;\n      const success = await httpService.fetch({\n        method: actualMethod || 'delete',\n        origUrl: url,\n        rawData: item,\n        headers: Object.assign({}, pageHeaders, requestHeaders || {}),\n        responseType: 'boolean'\n      });\n\n      if (success) {\n        goBack();\n      }\n    } catch (e) {\n      toast.error(e.message);\n    }\n  }\n\n  const renderTabContent = (key: string, resource: IConfigResource) => {\n    const sub = { ...resource };\n    return (\n      <TabPanel\n        key={key}\n      >\n        <ResourceItems\n          context={context}\n          activeResource={sub}\n          openedPopupState={openedPopup}\n          activePathVars={activePathVars}\n          isSubResource={true}\n        />\n      </TabPanel>\n    )\n  }\n\n  function ControlledTabs() {\n\n    if (subResources === null) {\n      return null;\n    }\n    return (\n      <Tabs selectedIndex={activeTabIndex} onSelect={tabIndex => setActiveTabIndex(tabIndex)}>\n        <TabList>\n          {\n            subResources &&\n            subResources.map((resource, index) => <Tab key={`resource_tablist_${index}`}>{resource.name}</Tab>)\n          }\n        </TabList>\n        {\n          subResources &&\n          subResources.map((resource, index) => renderTabContent(\n            `resource_tabcontent_${index}`,\n            resource,\n          ))\n        }\n      </Tabs>\n    );\n  }\n\n\n  function renderPageContent() {\n    if (loading) {\n      return <Loader />;\n    }\n    console.log('detailPagesConfig', detailPagesConfig)\n    console.log('activeResource', activeResource)\n    console.log('activeItem', activeItem)\n    console.log('subResources', subResources)\n    return (\n      <React.Fragment>\n        {\n          error ?\n            <div className=\"app-error\">{error}</div> :\n            detailPagesConfig &&\n            activeResource &&\n            activeItem &&\n            subResources &&\n            <ControlledTabs />\n        }\n      </React.Fragment>\n    )\n  }\n\n  function getPageMatch(getSingleMethods: { resource: IConfigResource, route: string }[] | undefined): { [key: string]: string } | null {\n    if (getSingleMethods === undefined || getSingleMethods.length === 0) {\n      return null;\n    }\n    let pathVars = {};\n    const nextDetail = getSingleMethods?.find(detailRoute => {\n      const method = detailRoute.resource.methods.getSingle;\n      if (!method.id) {\n        return false;\n      }\n      let match = matchPath(pathname, method.id);\n      pathVars = match ? match.params : {};\n      return match?.isExact;\n    });\n\n    if (nextDetail === undefined) {\n      return null;\n    }\n\n    return pathVars;\n  }\n\n  useEffect(() => {\n    setActivePathVars(getPageMatch(detailRouteConfigs) || {});\n    setActiveResource(null);\n    setActiveItem(null);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [pathname])\n\n  useEffect(() => {\n    if (activeResource === null) {\n      const resourceConfig = detailPagesConfig?.find(conf => {\n        if (!conf.route) {\n          return false;\n        }\n        console.log(`/${pathname}`);\n        console.log('conf.route', conf.route);\n        console.log('matchPath', matchPath(`/${pathname}`, conf.route));\n        return matchPath(`/${pathname}`, conf.route)?.isExact;\n      })?.resource;\n      if (resourceConfig) {\n        console.log('new ', resourceConfig);\n        setActiveResource(resourceConfig);\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [detailPagesConfig]);\n\n  useEffect(() => {\n    async function getOneRequest() {\n      setLoading(true);\n      setError(null);\n\n      try {\n        if (!getSingleConfig) {\n          throw new Error('Get single method is not defined.');\n        }\n\n        const { url, requestHeaders, actualMethod, dataPath, queryParams } = getSingleConfig;\n\n        const result = await httpService.fetch({\n          method: actualMethod || 'get',\n          origUrl: url,\n          rawData: getPageMatch(detailRouteConfigs) || {},\n          queryParams,\n          headers: Object.assign({}, pageHeaders, requestHeaders || {})\n        });\n        let extractedData = dataHelpers.extractDataByDataPath(result, dataPath);\n\n        if (!extractedData) {\n          throw new Error('Could not extract data from response.');\n        }\n\n        setActiveItem(extractedData);\n\n      } catch (e) {\n        setError(e.message);\n      }\n\n      setLoading(false);\n    }\n    if (activeResource && activeItem === null) {\n      getOneRequest();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [activeItem, activeResource]);\n\n\n  useEffect(() => {\n    // Handling item variables within page title\n    if (activeItem) {\n      let parsedPageName = getSingleConfig?.name;\n      const dynamicMatches = parsedPageName?.match(/:([\\w.]*)/gm);\n      const dynamicVars = dynamicMatches?.map(m => m.replace(/[:]/gm, ''));\n      const replacements = dynamicVars?.map(key => activeItem[key]);\n      dynamicMatches?.forEach((match, index) => { parsedPageName = parsedPageName?.replace(match, replacements?.[index] || 'undefined') });\n      setPageName(parsedPageName || null);\n    }\n  }, [getSingleConfig, activeItem])\n\n\n  return (\n    <div className=\"app-details-page\">\n      <header className=\"app-details-page-header\">\n        <hgroup>\n          <h2>{pageName}</h2>\n          <div className=\"details-wrapper\">\n            <Details\n              fields={fields}\n              item={activeItem}\n              customLabels={customLabels}\n            />\n          </div>\n        </hgroup>\n        {\n          (callbacks.put || callbacks.delete || (customActions && customActions.length > 0)) &&\n          <div className=\"details-actions-wrapper\">\n            {\n              callbacks.put &&\n              <Button onClick={() => callbacks.put?.(activeItem)} title={'editLabel'}>\n                <i className=\"fa fa-pencil-square-o\" aria-hidden=\"true\"></i>\n              </Button>\n            }\n            {\n              (customActions && customActions.length > 0) &&\n              customActions.map((action, idx) => (\n                <Button key={`action_${idx}`} onClick={() => callbacks.action(activeItem, action)} title={action.name}>\n                  <i className={`fa fa-${action.icon || 'cogs'}`} aria-hidden=\"true\"></i>\n                </Button>\n              ))\n            }\n            {\n              callbacks.delete &&\n              <Button onClick={() => callbacks.delete?.(activeItem)} title={'deleteLabel'}>\n                <i className=\"fa fa-times\" aria-hidden=\"true\"></i>\n              </Button>\n            }\n          </div>\n        }\n      </header>\n      <main className=\"app-details-page-content\">\n        {renderPageContent()}\n      </main>\n      {\n        openedPopup &&\n        <FormPopup\n          title={openedPopup.title}\n          closeCallback={closeFormPopup}\n          submitCallback={openedPopup.submitCallback}\n          fields={openedPopup.config?.fields || []}\n          rawData={openedPopup.rawData}\n          getSingleConfig={openedPopup.getSingleConfig}\n          methodConfig={openedPopup.config}\n        />\n      }\n    </div>\n  );\n}\n\nexport const DetailPage = withAppContext(DetailPageComp);\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport { IAppContext } from '../app.context';\nimport { withAppContext } from '../withContext/withContext.comp';\nimport { Button } from '../button/button.comp';\n\nimport './navigation.scss';\n\ninterface IProps {\n  context: IAppContext\n}\n\nconst NavigationComp = ({ context: { config } }: IProps) => {\n  const [isOpened, setIsOpened] = useState<boolean>(false);\n\n  return (\n    <nav className=\"app-nav\">\n      <Button className=\"app-nav-opener\" onClick={() => setIsOpened(!isOpened)}>\n        {\n          isOpened ? \n          <i className=\"fa fa-times\" aria-hidden=\"true\"></i> : \n          <i className=\"fa fa-bars\" aria-hidden=\"true\"></i>\n        }\n      </Button>\n\n      <div className={`app-nav-wrapper ${isOpened ? 'opened' : ''}`}>\n        <div className=\"app-nav-links\">\n          {\n            (config?.resources || []).map((page, idx) => (\n              <NavLink to={`/${page.id || idx + 1}`} activeClassName=\"active\" key={`page_${idx}`} onClick={() => setIsOpened(false)}>{page.name}</NavLink>\n            ))\n          }\n        </div>\n      </div>\n    </nav>\n  );\n}\n\nexport const Navigation = withAppContext(NavigationComp);","import React from 'react';\nimport { ICustomStyles } from '../../common/models/config.model';\n\ninterface IProps {\n  styles: ICustomStyles\n}\n\nexport const CustomStyles = ({ styles }: IProps) => {\n  const cssVars = styles.vars || {};\n  const arr = [];\n  \n  for (const key in cssVars) {\n    arr.push(`--${key}: ${(cssVars as any)[key]}`);\n  }\n\n  return (\n    <style dangerouslySetInnerHTML={{ __html: `\n      :root {\n        ${arr.join(';')}\n      }\n    ` }}>\n    </style>\n  );\n};","import React, { useEffect, useState } from 'react';\nimport { HashRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\nimport { ToastContainer, toast } from 'react-toastify';\nimport ConfigService from '../services/config.service';\nimport { IConfig, IConfigResource } from '../common/models/config.model';\nimport { Page } from '../components/page/page.comp';\nimport { DetailPage } from './detailPage/detailPage.comp';\nimport { Navigation } from '../components/navigation/navigation.comp';\nimport { AppContext } from './app.context';\nimport HttpService from '../services/http.service';\nimport { CustomStyles } from './customStyles/customStyles.comp';\nimport { routesHelpers } from '../helpers/routes.helpers';\n\nimport './app.scss';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst httpService = new HttpService();\nconst defaultAppName: string = 'RESTool App';\n\nfunction changeFavicon(src: string) {\n  const link = document.createElement('link');\n  const oldLink = document.getElementById('favicon');\n  link.id = 'favicon';\n  link.rel = 'shortcut icon';\n  link.href = src;\n  if (oldLink) {\n    document.head.removeChild(oldLink);\n  }\n  document.head.appendChild(link);\n}\n\nfunction App() {\n  const [firstLoad, setFirstLoad] = useState<boolean>(true);\n  const [config, setConfig] = useState<IConfig | null>(null);\n  const [activeResource, setActiveResource] = useState<IConfigResource | null>(config?.resources?.[0] || config?.pages?.[0] || null);\n  const [activePathVars, setActivePathVars] = useState<{ [key: string]: string }>({});\n  const [error, setError] = useState<string | null>(null);\n  const [activeItem, setActiveItem] = useState<any | null>(null);\n\n  const appName: string = config?.name || defaultAppName;\n\n  async function loadConfig(url?: string): Promise<void> {\n    try {\n      const windowConfig = (window as any).RESTool?.config;\n      let remoteConfig: IConfig;\n      // Try to load config from window object first\n      if (!url && windowConfig) {\n        remoteConfig = Object.assign({}, windowConfig, {});\n      } else {\n        remoteConfig = url ? await ConfigService.getRemoteConfig(url) : await ConfigService.loadDefaultConfig();\n      }\n\n      if (remoteConfig.pages && remoteConfig.resources) {\n        throw new Error('Configuration is invalid, use either resources or pages (deprecated), not both');\n      }\n\n      if (remoteConfig.pages) {\n        remoteConfig.resources = remoteConfig.pages;\n      }\n\n      // Setting global config for httpService\n      httpService.baseUrl = remoteConfig.baseUrl || '';\n      httpService.errorMessageDataPath = remoteConfig.errorMessageDataPath || '';\n      httpService.unauthorizedRedirectUrl = remoteConfig.unauthorizedRedirectUrl || '';\n      httpService.requestHeaders = remoteConfig.requestHeaders || {};\n      document.title = remoteConfig.name || defaultAppName;\n\n      if (remoteConfig?.favicon) {\n        changeFavicon(remoteConfig.favicon);\n      }\n\n      if (remoteConfig?.remoteUrl) {\n        return await loadConfig(remoteConfig.remoteUrl);\n      }\n      setConfig(remoteConfig);\n    } catch (e) {\n      console.error('Could not load config file', e);\n    }\n\n    setFirstLoad(false);\n  }\n\n  function scrollToTop(scrollDuration: number = 250) {\n    var cosParameter = window.scrollY / 2,\n      scrollCount = 0,\n      oldTimestamp = performance.now();\n\n    function step(newTimestamp: number) {\n      scrollCount += Math.PI / (scrollDuration / (newTimestamp - oldTimestamp));\n\n      if (scrollCount >= Math.PI) {\n        window.scrollTo(0, 0);\n      }\n\n      if (window.scrollY === 0) {\n        return;\n      }\n\n      window.scrollTo(0, Math.round(cosParameter + cosParameter * Math.cos(scrollCount)));\n      oldTimestamp = newTimestamp;\n      window.requestAnimationFrame(step);\n    }\n\n    window.requestAnimationFrame(step);\n  }\n\n  useEffect(() => {\n    loadConfig();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    const { isValid, errorMessage } = ConfigService.validateConfig(config);\n\n    if (!isValid) {\n      setError(errorMessage);\n      toast.error(errorMessage);\n      return;\n    }\n  }, [config]);\n\n  console.log('here', config?.resources);\n\n  const detailPagesConfig = routesHelpers.detailRoutesConfig(config?.resources);\n\n  const resourceRoutes: string[] = config?.resources?.map(p => `/${p.id}`) || [];\n  const detailRoutes: string[] = detailPagesConfig.map(conf => conf.route);\n  const subResourceRoutes: string[] = routesHelpers.subResourceRoutes(config?.resources);\n\n  return (\n    <div className=\"restool-app\">\n      {\n        !config ?\n          <div className=\"app-error\">\n            {firstLoad ? 'Loading Configuration...' : 'Could not find config file.'}\n          </div> :\n          <AppContext.Provider value={{ config, detailPagesConfig, activeResource, setActiveResource, activePathVars, setActivePathVars, activeItem, setActiveItem, error, setError, httpService }}>\n            {\n              config.customStyles &&\n              <CustomStyles\n                styles={config.customStyles}\n              />\n            }\n            <Router>\n              <aside>\n                <h1 title={appName} onClick={() => scrollToTop()}>{appName}</h1>\n                {\n                  <Navigation />\n                }\n              </aside>\n              {\n                config &&\n                <Switch>\n                  <Route exact path={detailRoutes} component={DetailPage} />\n                  <Route exact path={resourceRoutes} component={Page} />\n                  <Route exact path={subResourceRoutes} component={Page} />\n                  <Redirect path=\"/\" to={`/${config?.resources?.[0]?.id || '1'}`} />\n                </Switch>\n              }\n              <ToastContainer\n                position={toast.POSITION.TOP_CENTER}\n                autoClose={4000}\n                draggable={false}\n              />\n            </Router>\n          </AppContext.Provider>\n      }\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config: any) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config: any) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config: any) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app';\nimport * as serviceWorker from './serviceWorker';\n\nimport './index.scss';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}